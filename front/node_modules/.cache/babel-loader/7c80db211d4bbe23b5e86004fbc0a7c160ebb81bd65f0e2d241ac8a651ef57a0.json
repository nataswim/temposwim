{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx\",\n  _s = $RefreshSig$();\n/**\n * ðŸ‡¬ðŸ‡§ Interactive chronometer component with Bootstrap design enhancement.\n * ðŸ‡«ðŸ‡· Composant chronomÃ¨tre interactif avec design Bootstrap amÃ©liorÃ©.\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\nimport Header from '../../components/template/Header';\nimport Footer from '../../components/template/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0d6efd', '#dc3545', '#198754'];\nconst INITIAL_SWIMMERS = [{\n  id: 1,\n  name: 'Nageur 1',\n  laps: [],\n  finishTime: null\n}, {\n  id: 2,\n  name: 'Nageur 2',\n  laps: [],\n  finishTime: null\n}, {\n  id: 3,\n  name: 'Nageur 3',\n  laps: [],\n  finishTime: null\n}];\nconst formatTime = ms => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = Math.floor(ms % 60000 / 1000);\n  const milliseconds = Math.floor(ms % 1000 / 10);\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n};\nconst Chronometer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS);\n  const [raceFinished, setRaceFinished] = useState(false);\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(!isRunning);\n  }, [isRunning, intervalId, raceFinished]);\n  const recordLap = id => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === id) {\n        var _swimmer$laps$at;\n        const last = ((_swimmer$laps$at = swimmer.laps.at(-1)) === null || _swimmer$laps$at === void 0 ? void 0 : _swimmer$laps$at.time) || 0;\n        return {\n          ...swimmer,\n          laps: [...swimmer.laps, {\n            number: swimmer.laps.length + 1,\n            time,\n            splitTime: time - last\n          }]\n        };\n      }\n      return swimmer;\n    }));\n  };\n  const finishSwimmer = id => {\n    if (!isRunning) return;\n    const updated = swimmers.map(swimmer => swimmer.id === id && swimmer.finishTime === null ? {\n      ...swimmer,\n      finishTime: time\n    } : swimmer);\n    setSwimmers(updated);\n    if (updated.every(s => s.finishTime !== null)) {\n      clearInterval(intervalId);\n      setIsRunning(false);\n      setRaceFinished(true);\n    }\n  };\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n  useEffect(() => () => clearInterval(intervalId), [intervalId]);\n  const chartData = swimmers[0].laps.map((_, i) => {\n    const d = {\n      lap: i + 1\n    };\n    swimmers.forEach(s => {\n      if (s.laps[i]) d[`swimmer${s.id}`] = s.laps[i].splitTime / 1000;\n    });\n    return d;\n  });\n  const getRaceResults = () => {\n    var _sorted$;\n    const sorted = swimmers.filter(s => s.finishTime !== null).sort((a, b) => a.finishTime - b.finishTime);\n    const best = ((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.finishTime) || 0;\n    return sorted.map(s => ({\n      ...s,\n      diff: s.finishTime - best === 0 ? '-' : `+${formatTime(s.finishTime - best)}`\n    }));\n  };\n  const averageLap = id => {\n    const s = swimmers.find(s => s.id === id);\n    if (!s || s.laps.length === 0) return '00:00.00';\n    const avg = s.laps.reduce((a, l) => a + l.splitTime, 0) / s.laps.length;\n    return formatTime(avg);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 fw-bold text-primary\",\n          children: formatTime(time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center gap-3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleTimer,\n            disabled: raceFinished,\n            className: \"btn btn-outline-primary btn-lg\",\n            children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 50\n            }, this), \" \", isRunning ? 'Pause' : 'Start']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            className: \"btn btn-outline-danger btn-lg\",\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \" Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-3 mb-4\",\n        children: swimmers.map((swimmer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded p-3 shadow-sm\",\n            style: {\n              borderColor: COLORS[idx]\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"fw-semibold text-center mb-2\",\n              children: swimmer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => recordLap(swimmer.id),\n                disabled: !isRunning || swimmer.finishTime,\n                className: \"btn btn-success\",\n                children: [/*#__PURE__*/_jsxDEV(Flag, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), \" Lap\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => finishSwimmer(swimmer.id),\n                disabled: !isRunning || swimmer.finishTime,\n                className: \"btn btn-warning\",\n                children: [/*#__PURE__*/_jsxDEV(Trophy, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), \" Finish\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center small mt-2\",\n              children: [\"Laps: \", swimmer.laps.length, \" | Moyenne: \", averageLap(swimmer.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, swimmer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), (raceFinished || swimmers.some(s => s.finishTime)) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"fw-bold mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            className: \"text-warning me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 42\n          }, this), \" Classement final\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nageur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Temps final\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Diff\\xE9rence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getRaceResults().map((s, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatTime(s.finishTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.diff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, s.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), swimmers.map((swimmer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-decoration-underline\",\n          style: {\n            color: COLORS[idx]\n          },\n          children: [swimmer.name, \" - D\\xE9tails des tours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Interm\\xE9diaire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: swimmer.laps.map(lap => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: lap.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatTime(lap.splitTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatTime(lap.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, lap.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, swimmer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light p-3 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3\",\n          children: \"\\xC9volution des temps par nageur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"lap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), swimmers.map((swimmer, index) => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: `swimmer${swimmer.id}`,\n              name: swimmer.name,\n              stroke: COLORS[index],\n              strokeWidth: 2\n            }, swimmer.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chronometer, \"h8W5psyUUaBz0PcWHKUrWXqAQE8=\");\n_c = Chronometer;\nexport default Chronometer;\nvar _c;\n$RefreshReg$(_c, \"Chronometer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Play","Pause","Flag","RotateCcw","Trophy","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","INITIAL_SWIMMERS","id","name","laps","finishTime","formatTime","ms","minutes","Math","floor","seconds","milliseconds","toString","padStart","Chronometer","_s","time","setTime","isRunning","setIsRunning","intervalId","setIntervalId","swimmers","setSwimmers","raceFinished","setRaceFinished","toggleTimer","setInterval","prev","clearInterval","recordLap","map","swimmer","_swimmer$laps$at","last","at","number","length","splitTime","finishSwimmer","updated","every","s","reset","chartData","_","i","d","lap","forEach","getRaceResults","_sorted$","sorted","filter","sort","a","b","best","diff","averageLap","find","avg","reduce","l","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","size","idx","style","borderColor","some","color","width","height","data","strokeDasharray","dataKey","index","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx"],"sourcesContent":["/**\n * ðŸ‡¬ðŸ‡§ Interactive chronometer component with Bootstrap design enhancement.\n * ðŸ‡«ðŸ‡· Composant chronomÃ¨tre interactif avec design Bootstrap amÃ©liorÃ©.\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\nimport Header from '../../components/template/Header';\nimport Footer from '../../components/template/Footer';\n\nconst COLORS = ['#0d6efd', '#dc3545', '#198754'];\nconst INITIAL_SWIMMERS = [\n  { id: 1, name: 'Nageur 1', laps: [], finishTime: null },\n  { id: 2, name: 'Nageur 2', laps: [], finishTime: null },\n  { id: 3, name: 'Nageur 3', laps: [], finishTime: null }\n];\n\nconst formatTime = (ms) => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = Math.floor((ms % 60000) / 1000);\n  const milliseconds = Math.floor((ms % 1000) / 10);\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n};\n\nconst Chronometer = () => {\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS);\n  const [raceFinished, setRaceFinished] = useState(false);\n\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(!isRunning);\n  }, [isRunning, intervalId, raceFinished]);\n\n  const recordLap = (id) => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === id) {\n        const last = swimmer.laps.at(-1)?.time || 0;\n        return {\n          ...swimmer,\n          laps: [...swimmer.laps, { number: swimmer.laps.length + 1, time, splitTime: time - last }]\n        };\n      }\n      return swimmer;\n    }));\n  };\n\n  const finishSwimmer = (id) => {\n    if (!isRunning) return;\n    const updated = swimmers.map(swimmer => \n      swimmer.id === id && swimmer.finishTime === null ? { ...swimmer, finishTime: time } : swimmer);\n    setSwimmers(updated);\n    if (updated.every(s => s.finishTime !== null)) {\n      clearInterval(intervalId);\n      setIsRunning(false);\n      setRaceFinished(true);\n    }\n  };\n\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n\n  useEffect(() => () => clearInterval(intervalId), [intervalId]);\n\n  const chartData = swimmers[0].laps.map((_, i) => {\n    const d = { lap: i + 1 };\n    swimmers.forEach(s => {\n      if (s.laps[i]) d[`swimmer${s.id}`] = s.laps[i].splitTime / 1000;\n    });\n    return d;\n  });\n\n  const getRaceResults = () => {\n    const sorted = swimmers.filter(s => s.finishTime !== null).sort((a, b) => a.finishTime - b.finishTime);\n    const best = sorted[0]?.finishTime || 0;\n    return sorted.map(s => ({ ...s, diff: s.finishTime - best === 0 ? '-' : `+${formatTime(s.finishTime - best)}` }));\n  };\n\n  const averageLap = (id) => {\n    const s = swimmers.find(s => s.id === id);\n    if (!s || s.laps.length === 0) return '00:00.00';\n    const avg = s.laps.reduce((a, l) => a + l.splitTime, 0) / s.laps.length;\n    return formatTime(avg);\n  };\n\n  return (\n    <>\n      <Header />\n      <main className=\"container py-4\">\n        <div className=\"text-center mb-4\">\n          <h1 className=\"display-4 fw-bold text-primary\">{formatTime(time)}</h1>\n          <div className=\"d-flex justify-content-center gap-3 mb-3\">\n            <button onClick={toggleTimer} disabled={raceFinished} className=\"btn btn-outline-primary btn-lg\">\n              {isRunning ? <Pause size={18} /> : <Play size={18} />} {isRunning ? 'Pause' : 'Start'}\n            </button>\n            <button onClick={reset} className=\"btn btn-outline-danger btn-lg\">\n              <RotateCcw size={18} /> Reset\n            </button>\n          </div>\n        </div>\n\n        <div className=\"row g-3 mb-4\">\n          {swimmers.map((swimmer, idx) => (\n            <div className=\"col-md-4\" key={swimmer.id}>\n              <div className=\"border rounded p-3 shadow-sm\" style={{ borderColor: COLORS[idx] }}>\n                <h5 className=\"fw-semibold text-center mb-2\">{swimmer.name}</h5>\n                <div className=\"d-flex justify-content-center gap-2\">\n                  <button onClick={() => recordLap(swimmer.id)} disabled={!isRunning || swimmer.finishTime} className=\"btn btn-success\">\n                    <Flag size={16} /> Lap\n                  </button>\n                  <button onClick={() => finishSwimmer(swimmer.id)} disabled={!isRunning || swimmer.finishTime} className=\"btn btn-warning\">\n                    <Trophy size={16} /> Finish\n                  </button>\n                </div>\n                <p className=\"text-center small mt-2\">Laps: {swimmer.laps.length} | Moyenne: {averageLap(swimmer.id)}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {(raceFinished || swimmers.some(s => s.finishTime)) && (\n          <div className=\"mb-4\">\n            <h4 className=\"fw-bold mb-3\"><Trophy className=\"text-warning me-2\" size={20} /> Classement final</h4>\n            <table className=\"table table-bordered\">\n              <thead className=\"table-light\">\n                <tr><th>#</th><th>Nageur</th><th>Temps final</th><th>DiffÃ©rence</th></tr>\n              </thead>\n              <tbody>\n                {getRaceResults().map((s, i) => (\n                  <tr key={s.id}>\n                    <td>{i + 1}</td>\n                    <td>{s.name}</td>\n                    <td>{formatTime(s.finishTime)}</td>\n                    <td>{s.diff}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {swimmers.map((swimmer, idx) => (\n          <div key={swimmer.id} className=\"mb-4\">\n            <h5 className=\"text-decoration-underline\" style={{ color: COLORS[idx] }}>{swimmer.name} - DÃ©tails des tours</h5>\n            <table className=\"table table-sm table-striped\">\n              <thead>\n                <tr><th>Tour</th><th>IntermÃ©diaire</th><th>Total</th></tr>\n              </thead>\n              <tbody>\n                {swimmer.laps.map((lap) => (\n                  <tr key={lap.number}>\n                    <td>{lap.number}</td>\n                    <td>{formatTime(lap.splitTime)}</td>\n                    <td>{formatTime(lap.time)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n        {chartData.length > 0 && (\n          <div className=\"bg-light p-3 rounded shadow\">\n            <h5 className=\"mb-3\">Ã‰volution des temps par nageur</h5>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"lap\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {swimmers.map((swimmer, index) => (\n                  <Line\n                    key={swimmer.id}\n                    type=\"monotone\"\n                    dataKey={`swimmer${swimmer.id}`}\n                    name={swimmer.name}\n                    stroke={COLORS[index]}\n                    strokeWidth={2}\n                  />\n                ))}\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Chronometer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}