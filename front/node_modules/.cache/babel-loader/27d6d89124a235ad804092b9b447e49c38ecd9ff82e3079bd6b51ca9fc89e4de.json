{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx\",\n  _s = $RefreshSig$();\n/**\n * ðŸ‡¬ðŸ‡§ Interactive chronometer component with three swimmers, dedicated lap and finish buttons\n * ðŸ‡«ðŸ‡· Composant chronomÃ¨tre interactif avec trois nageurs et boutons dÃ©diÃ©s (version Bootstrap/CSS)\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0d6efd', '#dc3545', '#198754'];\nconst INITIAL_SWIMMERS = [{\n  id: 1,\n  name: 'Nageur 1',\n  laps: [],\n  finishTime: null\n}, {\n  id: 2,\n  name: 'Nageur 2',\n  laps: [],\n  finishTime: null\n}, {\n  id: 3,\n  name: 'Nageur 3',\n  laps: [],\n  finishTime: null\n}];\nconst formatTime = ms => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = Math.floor(ms % 60000 / 1000);\n  const milliseconds = Math.floor(ms % 1000 / 10);\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n};\nexport const Chronometer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS);\n  const [raceFinished, setRaceFinished] = useState(false);\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(!isRunning);\n  }, [isRunning, intervalId, raceFinished]);\n  const recordLap = id => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === id) {\n        var _swimmer$laps$at;\n        const last = ((_swimmer$laps$at = swimmer.laps.at(-1)) === null || _swimmer$laps$at === void 0 ? void 0 : _swimmer$laps$at.time) || 0;\n        return {\n          ...swimmer,\n          laps: [...swimmer.laps, {\n            number: swimmer.laps.length + 1,\n            time,\n            splitTime: time - last\n          }]\n        };\n      }\n      return swimmer;\n    }));\n  };\n  const finishSwimmer = id => {\n    if (!isRunning) return;\n    const updated = swimmers.map(swimmer => swimmer.id === id && swimmer.finishTime === null ? {\n      ...swimmer,\n      finishTime: time\n    } : swimmer);\n    setSwimmers(updated);\n    if (updated.every(s => s.finishTime !== null)) {\n      clearInterval(intervalId);\n      setIsRunning(false);\n      setRaceFinished(true);\n    }\n  };\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n  useEffect(() => () => clearInterval(intervalId), [intervalId]);\n  const chartData = swimmers[0].laps.map((_, i) => {\n    const d = {\n      lap: i + 1\n    };\n    swimmers.forEach(s => {\n      if (s.laps[i]) d[`swimmer${s.id}`] = s.laps[i].splitTime / 1000;\n    });\n    return d;\n  });\n  const getRaceResults = () => {\n    var _sorted$;\n    const sorted = swimmers.filter(s => s.finishTime !== null).sort((a, b) => a.finishTime - b.finishTime);\n    const best = ((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.finishTime) || 0;\n    return sorted.map(s => ({\n      ...s,\n      diff: s.finishTime - best === 0 ? '-' : `+${formatTime(s.finishTime - best)}`\n    }));\n  };\n  const averageLap = id => {\n    const s = swimmers.find(s => s.id === id);\n    if (!s || s.laps.length === 0) return '00:00.00';\n    const avg = s.laps.reduce((a, l) => a + l.splitTime, 0) / s.laps.length;\n    return formatTime(avg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 fw-bold\",\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center gap-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTimer,\n          disabled: raceFinished,\n          className: \"btn btn-primary\",\n          children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 48\n          }, this), \" \", isRunning ? 'Pause' : 'Start']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          className: \"btn btn-danger\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), \" Reset\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row g-3 mb-4\",\n      children: swimmers.map((swimmer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded p-3\",\n          style: {\n            borderColor: COLORS[idx]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"fw-semibold text-center mb-2\",\n            children: swimmer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => recordLap(swimmer.id),\n              disabled: !isRunning || swimmer.finishTime,\n              className: \"btn btn-success\",\n              children: [/*#__PURE__*/_jsxDEV(Flag, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), \" Lap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => finishSwimmer(swimmer.id),\n              disabled: !isRunning || swimmer.finishTime,\n              className: \"btn btn-warning\",\n              children: [/*#__PURE__*/_jsxDEV(Trophy, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), \" Finish\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center small mt-2\",\n            children: [\"Laps: \", swimmer.laps.length, \" | Avg: \", averageLap(swimmer.id)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, swimmer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), (raceFinished || swimmers.some(s => s.finishTime)) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"fw-bold mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Trophy, {\n          className: \"text-warning me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }, this), \" Classement final\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nageur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Temps final\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Diff\\xE9rence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getRaceResults().map((s, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(s.finishTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.diff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, s.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), swimmers.map((swimmer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        style: {\n          color: COLORS[idx]\n        },\n        children: [swimmer.name, \" - Tours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Interm\\xE9diaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: swimmer.laps.map(lap => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: lap.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(lap.splitTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(lap.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, lap.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, swimmer.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-light p-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-3\",\n        children: \"\\xC9volution des temps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"lap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), swimmers.map((swimmer, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: `swimmer${swimmer.id}`,\n            name: swimmer.name,\n            stroke: COLORS[index],\n            strokeWidth: 2\n          }, swimmer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Chronometer, \"h8W5psyUUaBz0PcWHKUrWXqAQE8=\");\n_c = Chronometer;\nexport default Chronometer;\nvar _c;\n$RefreshReg$(_c, \"Chronometer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Play","Pause","Flag","RotateCcw","Trophy","jsxDEV","_jsxDEV","COLORS","INITIAL_SWIMMERS","id","name","laps","finishTime","formatTime","ms","minutes","Math","floor","seconds","milliseconds","toString","padStart","Chronometer","_s","time","setTime","isRunning","setIsRunning","intervalId","setIntervalId","swimmers","setSwimmers","raceFinished","setRaceFinished","toggleTimer","setInterval","prev","clearInterval","recordLap","map","swimmer","_swimmer$laps$at","last","at","number","length","splitTime","finishSwimmer","updated","every","s","reset","chartData","_","i","d","lap","forEach","getRaceResults","_sorted$","sorted","filter","sort","a","b","best","diff","averageLap","find","avg","reduce","l","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","idx","style","borderColor","some","color","width","height","data","strokeDasharray","dataKey","index","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx"],"sourcesContent":["/**\n * ðŸ‡¬ðŸ‡§ Interactive chronometer component with three swimmers, dedicated lap and finish buttons\n * ðŸ‡«ðŸ‡· Composant chronomÃ¨tre interactif avec trois nageurs et boutons dÃ©diÃ©s (version Bootstrap/CSS)\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\n\nconst COLORS = ['#0d6efd', '#dc3545', '#198754'];\nconst INITIAL_SWIMMERS = [\n  { id: 1, name: 'Nageur 1', laps: [], finishTime: null },\n  { id: 2, name: 'Nageur 2', laps: [], finishTime: null },\n  { id: 3, name: 'Nageur 3', laps: [], finishTime: null }\n];\n\nconst formatTime = (ms) => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = Math.floor((ms % 60000) / 1000);\n  const milliseconds = Math.floor((ms % 1000) / 10);\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n};\n\nexport const Chronometer = () => {\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS);\n  const [raceFinished, setRaceFinished] = useState(false);\n\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(!isRunning);\n  }, [isRunning, intervalId, raceFinished]);\n\n  const recordLap = (id) => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === id) {\n        const last = swimmer.laps.at(-1)?.time || 0;\n        return {\n          ...swimmer,\n          laps: [...swimmer.laps, { number: swimmer.laps.length + 1, time, splitTime: time - last }]\n        };\n      }\n      return swimmer;\n    }));\n  };\n\n  const finishSwimmer = (id) => {\n    if (!isRunning) return;\n    const updated = swimmers.map(swimmer => \n      swimmer.id === id && swimmer.finishTime === null ? { ...swimmer, finishTime: time } : swimmer);\n    setSwimmers(updated);\n    if (updated.every(s => s.finishTime !== null)) {\n      clearInterval(intervalId);\n      setIsRunning(false);\n      setRaceFinished(true);\n    }\n  };\n\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n\n  useEffect(() => () => clearInterval(intervalId), [intervalId]);\n\n  const chartData = swimmers[0].laps.map((_, i) => {\n    const d = { lap: i + 1 };\n    swimmers.forEach(s => {\n      if (s.laps[i]) d[`swimmer${s.id}`] = s.laps[i].splitTime / 1000;\n    });\n    return d;\n  });\n\n  const getRaceResults = () => {\n    const sorted = swimmers.filter(s => s.finishTime !== null).sort((a, b) => a.finishTime - b.finishTime);\n    const best = sorted[0]?.finishTime || 0;\n    return sorted.map(s => ({ ...s, diff: s.finishTime - best === 0 ? '-' : `+${formatTime(s.finishTime - best)}` }));\n  };\n\n  const averageLap = (id) => {\n    const s = swimmers.find(s => s.id === id);\n    if (!s || s.laps.length === 0) return '00:00.00';\n    const avg = s.laps.reduce((a, l) => a + l.splitTime, 0) / s.laps.length;\n    return formatTime(avg);\n  };\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"text-center mb-4\">\n        <h1 className=\"display-4 fw-bold\">{formatTime(time)}</h1>\n        <div className=\"d-flex justify-content-center gap-3 mb-3\">\n          <button onClick={toggleTimer} disabled={raceFinished} className=\"btn btn-primary\">\n            {isRunning ? <Pause size={18} /> : <Play size={18} />} {isRunning ? 'Pause' : 'Start'}\n          </button>\n          <button onClick={reset} className=\"btn btn-danger\">\n            <RotateCcw size={18} /> Reset\n          </button>\n        </div>\n      </div>\n\n      <div className=\"row g-3 mb-4\">\n        {swimmers.map((swimmer, idx) => (\n          <div className=\"col-md-4\" key={swimmer.id}>\n            <div className=\"border rounded p-3\" style={{ borderColor: COLORS[idx] }}>\n              <h5 className=\"fw-semibold text-center mb-2\">{swimmer.name}</h5>\n              <div className=\"d-flex justify-content-center gap-2\">\n                <button onClick={() => recordLap(swimmer.id)} disabled={!isRunning || swimmer.finishTime} className=\"btn btn-success\">\n                  <Flag size={16} /> Lap\n                </button>\n                <button onClick={() => finishSwimmer(swimmer.id)} disabled={!isRunning || swimmer.finishTime} className=\"btn btn-warning\">\n                  <Trophy size={16} /> Finish\n                </button>\n              </div>\n              <p className=\"text-center small mt-2\">Laps: {swimmer.laps.length} | Avg: {averageLap(swimmer.id)}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {(raceFinished || swimmers.some(s => s.finishTime)) && (\n        <div className=\"mb-4\">\n          <h4 className=\"fw-bold mb-3\"><Trophy className=\"text-warning me-2\" size={20} /> Classement final</h4>\n          <table className=\"table table-bordered\">\n            <thead className=\"table-light\">\n              <tr><th>#</th><th>Nageur</th><th>Temps final</th><th>DiffÃ©rence</th></tr>\n            </thead>\n            <tbody>\n              {getRaceResults().map((s, i) => (\n                <tr key={s.id}>\n                  <td>{i + 1}</td>\n                  <td>{s.name}</td>\n                  <td>{formatTime(s.finishTime)}</td>\n                  <td>{s.diff}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {swimmers.map((swimmer, idx) => (\n        <div key={swimmer.id} className=\"mb-4\">\n          <h5 style={{ color: COLORS[idx] }}>{swimmer.name} - Tours</h5>\n          <table className=\"table table-sm\">\n            <thead>\n              <tr><th>Tour</th><th>IntermÃ©diaire</th><th>Total</th></tr>\n            </thead>\n            <tbody>\n              {swimmer.laps.map((lap) => (\n                <tr key={lap.number}>\n                  <td>{lap.number}</td>\n                  <td>{formatTime(lap.splitTime)}</td>\n                  <td>{formatTime(lap.time)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n\n      {chartData.length > 0 && (\n        <div className=\"bg-light p-3 rounded\">\n          <h5 className=\"mb-3\">Ã‰volution des temps</h5>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"lap\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              {swimmers.map((swimmer, index) => (\n                <Line\n                  key={swimmer.id}\n                  type=\"monotone\"\n                  dataKey={`swimmer${swimmer.id}`}\n                  name={swimmer.name}\n                  stroke={COLORS[index]}\n                  strokeWidth={2}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Chronometer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}