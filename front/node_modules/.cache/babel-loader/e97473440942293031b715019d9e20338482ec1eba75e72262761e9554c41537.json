{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/routes/PrivateRoute.jsx\",\n  _s = $RefreshSig$();\n/**\n * üá¨üáß Basic private route component\n * üá´üá∑ Composant de route priv√©e basique\n */\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\n\n/**\n * üá¨üáß PrivateRoute - Controls access to protected routes\n * Redirects unauthenticated users to error page\n * \n * üá´üá∑ PrivateRoute - Contr√¥le l'acc√®s aux routes prot√©g√©es\n * Redirige les utilisateurs non authentifi√©s vers la page d'erreur\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const auth = useAuth();\n  const location = useLocation();\n\n  // Pour d√©bogage seulement - √† supprimer en production\n  console.log(\"Auth state in PrivateRoute:\", auth);\n\n  // V√©rification simple du token\n  if (!auth || !auth.token) {\n    console.log(\"Access denied: No valid token found\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/401\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si l'utilisateur est authentifi√©, afficher le contenu prot√©g√©\n  console.log(\"Access granted: Valid token found\");\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"HRLOLLAXFjObMMH3UCaG4AIfmXk=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Outlet","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","PrivateRoute","_s","auth","location","console","log","token","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/routes/PrivateRoute.jsx"],"sourcesContent":["/**\n * üá¨üáß Basic private route component\n * üá´üá∑ Composant de route priv√©e basique\n */\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\n\n/**\n * üá¨üáß PrivateRoute - Controls access to protected routes\n * Redirects unauthenticated users to error page\n * \n * üá´üá∑ PrivateRoute - Contr√¥le l'acc√®s aux routes prot√©g√©es\n * Redirige les utilisateurs non authentifi√©s vers la page d'erreur\n */\nconst PrivateRoute = () => {\n  const auth = useAuth();\n  const location = useLocation();\n  \n  // Pour d√©bogage seulement - √† supprimer en production\n  console.log(\"Auth state in PrivateRoute:\", auth);\n\n  // V√©rification simple du token\n  if (!auth || !auth.token) {\n    console.log(\"Access denied: No valid token found\");\n    return <Navigate to=\"/401\" state={{ from: location }} replace />;\n  }\n\n  // Si l'utilisateur est authentifi√©, afficher le contenu prot√©g√©\n  console.log(\"Access granted: Valid token found\");\n  return <Outlet />;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGL,OAAO,CAAC,CAAC;EACtB,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACAQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,IAAI,CAAC;;EAEhD;EACA,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACI,KAAK,EAAE;IACxBF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,oBAAON,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEN;MAAS,CAAE;MAACO,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClE;;EAEA;EACAV,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAChD,oBAAON,OAAA,CAACL,MAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACb,EAAA,CAhBID,YAAY;EAAA,QACHH,OAAO,EACHD,WAAW;AAAA;AAAAmB,EAAA,GAFxBf,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}