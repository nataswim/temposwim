{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/routes/PrivateRoute.jsx\",\n  _s = $RefreshSig$();\n/**\n * üá¨üáß Private route component with improved token validation\n * üá´üá∑ Composant de route priv√©e avec validation am√©lior√©e du token\n */\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useState, useEffect } from \"react\";\nimport { getToken } from \"../utils/tokenStorage\"; // Assurez-vous que ce chemin est correct\n\n/**\n * üá¨üáß PrivateRoute - Controls access to protected routes with improved token validation\n * Includes fallback methods for token verification and debugging tools\n * \n * üá´üá∑ PrivateRoute - Contr√¥le l'acc√®s aux routes prot√©g√©es avec validation de token am√©lior√©e\n * Inclut des m√©thodes alternatives pour la v√©rification du token et des outils de d√©bogage\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const auth = useAuth();\n  const location = useLocation();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // M√©thode principale: utiliser le token du hook useAuth\n    const checkAuthStatus = () => {\n      const tokenFromHook = auth === null || auth === void 0 ? void 0 : auth.token;\n\n      // M√©thode de secours: v√©rifier directement localStorage\n      const tokenFromStorage = getToken();\n\n      // Pour d√©bogage\n      console.log(\"Token from hook:\", tokenFromHook);\n      console.log(\"Token from storage:\", tokenFromStorage);\n\n      // V√©rification flexible du token (l'une des deux m√©thodes suffit)\n      const hasValidToken = Boolean(tokenFromHook || tokenFromStorage);\n      setIsAuthenticated(hasValidToken);\n      setIsLoading(false);\n    };\n    checkAuthStatus();\n  }, [auth]);\n\n  // Afficher un indicateur de chargement pendant la v√©rification\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-5\",\n      children: \"V\\xE9rification de l'authentification...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si l'utilisateur n'est pas authentifi√©, rediriger vers la page d'erreur 401\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/401\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si l'utilisateur est authentifi√©, afficher le contenu prot√©g√©\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"blCgm1M5TxrvNKZfxGzPnZRWh4I=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Outlet","Navigate","useLocation","useAuth","useState","useEffect","getToken","jsxDEV","_jsxDEV","PrivateRoute","_s","auth","location","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthStatus","tokenFromHook","token","tokenFromStorage","console","log","hasValidToken","Boolean","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/routes/PrivateRoute.jsx"],"sourcesContent":["/**\n * üá¨üáß Private route component with improved token validation\n * üá´üá∑ Composant de route priv√©e avec validation am√©lior√©e du token\n */\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useState, useEffect } from \"react\";\nimport { getToken } from \"../utils/tokenStorage\"; // Assurez-vous que ce chemin est correct\n\n/**\n * üá¨üáß PrivateRoute - Controls access to protected routes with improved token validation\n * Includes fallback methods for token verification and debugging tools\n * \n * üá´üá∑ PrivateRoute - Contr√¥le l'acc√®s aux routes prot√©g√©es avec validation de token am√©lior√©e\n * Inclut des m√©thodes alternatives pour la v√©rification du token et des outils de d√©bogage\n */\nconst PrivateRoute = () => {\n  const auth = useAuth();\n  const location = useLocation();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // M√©thode principale: utiliser le token du hook useAuth\n    const checkAuthStatus = () => {\n      const tokenFromHook = auth?.token;\n      \n      // M√©thode de secours: v√©rifier directement localStorage\n      const tokenFromStorage = getToken();\n      \n      // Pour d√©bogage\n      console.log(\"Token from hook:\", tokenFromHook);\n      console.log(\"Token from storage:\", tokenFromStorage);\n      \n      // V√©rification flexible du token (l'une des deux m√©thodes suffit)\n      const hasValidToken = Boolean(tokenFromHook || tokenFromStorage);\n      \n      setIsAuthenticated(hasValidToken);\n      setIsLoading(false);\n    };\n\n    checkAuthStatus();\n  }, [auth]);\n\n  // Afficher un indicateur de chargement pendant la v√©rification\n  if (isLoading) {\n    return <div className=\"text-center p-5\">V√©rification de l'authentification...</div>;\n  }\n\n  // Si l'utilisateur n'est pas authentifi√©, rediriger vers la page d'erreur 401\n  if (!isAuthenticated) {\n    return <Navigate to=\"/401\" state={{ from: location }} replace />;\n  }\n\n  // Si l'utilisateur est authentifi√©, afficher le contenu prot√©g√©\n  return <Outlet />;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,uBAAuB,CAAC,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;EACtB,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,aAAa,GAAGP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,KAAK;;MAEjC;MACA,MAAMC,gBAAgB,GAAGd,QAAQ,CAAC,CAAC;;MAEnC;MACAe,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,aAAa,CAAC;MAC9CG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,gBAAgB,CAAC;;MAEpD;MACA,MAAMG,aAAa,GAAGC,OAAO,CAACN,aAAa,IAAIE,gBAAgB,CAAC;MAEhEN,kBAAkB,CAACS,aAAa,CAAC;MACjCP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;;EAEV;EACA,IAAII,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrF;;EAEA;EACA,IAAI,CAACjB,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACP,QAAQ;MAAC8B,EAAE,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAErB;MAAS,CAAE;MAACsB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClE;;EAEA;EACA,oBAAOtB,OAAA,CAACR,MAAM;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACpB,EAAA,CAxCID,YAAY;EAAA,QACHN,OAAO,EACHD,WAAW;AAAA;AAAAiC,EAAA,GAFxB1B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}