{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/SwimmingPerformancePredictor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/template/Header';\nimport Footer from '../../components/template/Footer';\nimport { FaStopwatch, FaInfoCircle } from 'react-icons/fa';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Timer, Info } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst swimmingStyles = [{\n  name: 'Crawl',\n  distances: [100, 200, 400, 800, 1500]\n}, {\n  name: 'Papillon',\n  distances: [100, 200]\n}, {\n  name: 'Brasse',\n  distances: [100, 200]\n}, {\n  name: 'Dos',\n  distances: [100, 200]\n}, {\n  name: 'Quatre Nages',\n  distances: [200, 400]\n}];\nconst formatTime = timeInSeconds => {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = Math.floor(timeInSeconds % 60);\n  const centiseconds = Math.round(timeInSeconds % 1 * 100);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}.${centiseconds.toString().padStart(2, '0')}`;\n};\nconst addFinalPercentage = time => {\n  return time * 1.049; // Ajoute 4.9%\n};\nconst calculatePredictedTimes = (style, distance, bestTime50m, medleyTimes) => {\n  const predictions = [];\n  const time50m = bestTime50m;\n  const time100m = style === 'Crawl' ? addFinalPercentage(time50m + 1.5 + (time50m + 2.49)) : style === 'Papillon' ? addFinalPercentage(time50m + 1.5 + (time50m + 2.49)) : style === 'Brasse' ? addFinalPercentage(time50m + 1.5 + (time50m + 2.49)) : addFinalPercentage(time50m + 1.5 + (time50m + 2.49));\n  switch (style) {\n    case 'Quatre Nages':\n      if (distance === 200 && medleyTimes) {\n        const butterfly = parseFloat(medleyTimes.butterfly50m);\n        const backstroke = parseFloat(medleyTimes.backstroke50m);\n        const breaststroke = parseFloat(medleyTimes.breaststroke50m);\n        const freestyle = parseFloat(medleyTimes.freestyle50m);\n        const laps = [{\n          style: 'Papillon',\n          time: butterfly + 2.2\n        }, {\n          style: 'Dos',\n          time: backstroke + 3.09\n        }, {\n          style: 'Brasse',\n          time: breaststroke + 5.59\n        }, {\n          style: 'Crawl',\n          time: freestyle + 5.09\n        }];\n        laps.forEach((lap, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time),\n            label: `${lap.style} ${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      } else if (distance === 400 && medleyTimes) {\n        const butterfly = parseFloat(medleyTimes.butterfly100m);\n        const backstroke = parseFloat(medleyTimes.backstroke100m);\n        const breaststroke = parseFloat(medleyTimes.breaststroke100m);\n        const freestyle = parseFloat(medleyTimes.freestyle100m);\n        const laps = [{\n          style: 'Papillon',\n          time: butterfly + 3.2\n        }, {\n          style: 'Dos',\n          time: backstroke + 6.19\n        }, {\n          style: 'Brasse',\n          time: breaststroke + 6\n        }, {\n          style: 'Crawl',\n          time: freestyle + 8.97\n        }];\n        laps.forEach((lap, index) => {\n          predictions.push({\n            distance: (index + 1) * 100,\n            time: index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time),\n            label: `${lap.style} ${index + 1}${index === 0 ? 'er' : 'ème'} 100m`\n          });\n        });\n      }\n      break;\n    case 'Crawl':\n      if (distance === 100) {\n        const firstLap = time50m + 1.5;\n        const secondLap = time50m + 2.49;\n        predictions.push({\n          distance: 50,\n          time: firstLap,\n          timeFormatted: formatTime(firstLap),\n          label: '1er 50m'\n        }, {\n          distance: 100,\n          time: addFinalPercentage(secondLap),\n          timeFormatted: formatTime(addFinalPercentage(secondLap)),\n          label: '2ème 50m'\n        });\n      } else if (distance === 200) {\n        const laps = [time50m + 2.5, time50m + 4.13, time50m + 4.53, time50m + 2.57];\n        laps.forEach((time, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(time) : time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(time) : time),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      } else if (distance === 400) {\n        const additionalTimes = [4.5, 6.13, 6, 2.59];\n        additionalTimes.forEach((addTime, index) => {\n          const lapTime = time100m + addTime;\n          predictions.push({\n            distance: (index + 1) * 100,\n            time: index === additionalTimes.length - 1 ? addFinalPercentage(lapTime) : lapTime,\n            timeFormatted: formatTime(index === additionalTimes.length - 1 ? addFinalPercentage(lapTime) : lapTime),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 100m`\n          });\n        });\n      } else if (distance === 800) {\n        predictions.push({\n          distance: 100,\n          time: time100m + 4.5,\n          timeFormatted: formatTime(time100m + 4.5),\n          label: '1er 100m'\n        });\n        for (let i = 0; i < 6; i++) {\n          predictions.push({\n            distance: (i + 2) * 100,\n            time: time100m + 6.13,\n            timeFormatted: formatTime(time100m + 6.13),\n            label: `${i + 2}ème 100m`\n          });\n        }\n        predictions.push({\n          distance: 800,\n          time: addFinalPercentage(time100m + 5),\n          timeFormatted: formatTime(addFinalPercentage(time100m + 5)),\n          label: '8ème 100m'\n        });\n      } else if (distance === 1500) {\n        predictions.push({\n          distance: 100,\n          time: time100m + 5,\n          timeFormatted: formatTime(time100m + 5),\n          label: '1er 100m'\n        });\n        for (let i = 0; i < 13; i++) {\n          predictions.push({\n            distance: (i + 2) * 100,\n            time: time100m + 7,\n            timeFormatted: formatTime(time100m + 7),\n            label: `${i + 2}ème 100m`\n          });\n        }\n        predictions.push({\n          distance: 1500,\n          time: addFinalPercentage(time100m + 6.5),\n          timeFormatted: formatTime(addFinalPercentage(time100m + 6.5)),\n          label: '15ème 100m'\n        });\n      }\n      break;\n    case 'Papillon':\n    case 'Brasse':\n    case 'Dos':\n      if (distance === 100) {\n        const firstLap = time50m + 1.5;\n        const secondLap = time50m + 2.49;\n        predictions.push({\n          distance: 50,\n          time: firstLap,\n          timeFormatted: formatTime(firstLap),\n          label: '1er 50m'\n        }, {\n          distance: 100,\n          time: addFinalPercentage(secondLap),\n          timeFormatted: formatTime(addFinalPercentage(secondLap)),\n          label: '2ème 50m'\n        });\n      } else if (distance === 200) {\n        const laps = [time50m + 2.5, time50m + 4.13, time50m + 4.53, time50m + 2.57];\n        laps.forEach((time, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(time) : time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(time) : time),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      }\n      break;\n  }\n  return predictions;\n};\nconst calculateTotalTime = predictions => {\n  return predictions.reduce((total, pred) => total + pred.time, 0);\n};\nconst SwimmingPerformancePredictor = () => {\n  _s();\n  var _swimmingStyles$find;\n  const [selectedStyle, setSelectedStyle] = useState(swimmingStyles[0].name);\n  const [selectedDistance, setSelectedDistance] = useState(swimmingStyles[0].distances[0]);\n  const [bestTime50m, setBestTime50m] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState('');\n  const [totalTime, setTotalTime] = useState('');\n  const [medleyTimes, setMedleyTimes] = useState({\n    butterfly50m: '',\n    backstroke50m: '',\n    breaststroke50m: '',\n    freestyle50m: '',\n    butterfly100m: '',\n    backstroke100m: '',\n    breaststroke100m: '',\n    freestyle100m: ''\n  });\n  const calculatePredictions = () => {\n    if (selectedStyle === 'Quatre Nages') {\n      if (selectedDistance === 200) {\n        const times = [medleyTimes.butterfly50m, medleyTimes.backstroke50m, medleyTimes.breaststroke50m, medleyTimes.freestyle50m];\n        if (times.some(time => !time || isNaN(parseFloat(time)))) {\n          setError('Veuillez entrer tous les temps pour le 200m Quatre Nages');\n          return;\n        }\n      } else if (selectedDistance === 400) {\n        const times = [medleyTimes.butterfly100m, medleyTimes.backstroke100m, medleyTimes.breaststroke100m, medleyTimes.freestyle100m];\n        if (times.some(time => !time || isNaN(parseFloat(time)))) {\n          setError('Veuillez entrer tous les temps pour le 400m Quatre Nages');\n          return;\n        }\n      }\n      setError('');\n      const newPredictions = calculatePredictedTimes(selectedStyle, selectedDistance, 0, medleyTimes);\n      setPredictions(newPredictions);\n      setTotalTime(formatTime(calculateTotalTime(newPredictions)));\n    } else {\n      const time50 = parseFloat(bestTime50m);\n      if (isNaN(time50) || time50 <= 0) {\n        setError('Veuillez entrer un temps valide');\n        return;\n      }\n      setError('');\n      const newPredictions = calculatePredictedTimes(selectedStyle, selectedDistance, time50);\n      setPredictions(newPredictions);\n      setTotalTime(formatTime(calculateTotalTime(newPredictions)));\n    }\n  };\n  useEffect(() => {\n    const style = swimmingStyles.find(s => s.name === selectedStyle);\n    if (style) {\n      setSelectedDistance(style.distances[0]);\n    }\n  }, [selectedStyle]);\n  const handleMedleyTimeChange = (field, value) => {\n    setMedleyTimes(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"py-5 bg-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(FaStopwatch, {\n              className: \"me-3 text-primary fs-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h3 fw-bold mb-0\",\n              children: \"Pr\\xE9dicteur de Performance Natation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info d-flex align-items-start gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {\n              className: \"mt-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-1\",\n                children: \"Cet outil permet d'estimer vos temps interm\\xE9diaires sur diff\\xE9rentes distances (100, 200, 400m) \\xE0 partir de votre meilleur temps sur 50m.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Les calculs sont bas\\xE9s sur des formules de projection standards utilis\\xE9es par les entra\\xEEneurs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-3 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Temps 50m (en secondes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: best50m,\n                onChange: e => setBest50m(e.target.value),\n                className: \"form-control\",\n                placeholder: \"ex : 32.75\",\n                step: \"0.01\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Distance \\xE0 pr\\xE9dire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: distance,\n                onChange: e => setDistance(parseInt(e.target.value)),\n                children: [100, 200, 400].map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: d,\n                  children: [d, \"m\"]\n                }, d, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCalculate,\n              className: \"btn btn-primary w-100\",\n              children: \"Calculer mes temps pr\\xE9visionnels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), totalTime && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            children: [\"Temps total estim\\xE9 : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: totalTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), predictions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title mb-3\",\n                children: \"D\\xE9tails des temps interm\\xE9diaires\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-bordered align-middle text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"table-light\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Fraction\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Temps (format\\xE9)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Temps brut (sec)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: predictions.map((p, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: p.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: p.timeFormatted\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: p.time.toFixed(2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 29\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(Timer, {\n              className: \"w-6 h-6 text-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-800\",\n              children: \"Pr\\xE9dicteur de Performance en Natation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-amber-50 rounded-lg border border-amber-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Info, {\n                className: \"w-5 h-5 text-amber-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold text-amber-900\",\n                children: \"Notes Importantes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside space-y-2 text-amber-900\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ces formules sont des estimations et peuvent varier en fonction des nageurs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Elles supposent une progression constante et une endurance adapt\\xE9e \\xE0 chaque distance et chaque nage.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ces formules sont tr\\xE8s utiles pour les entra\\xEEneurs et les nageurs pour estimer les temps de course en fonction des performances pass\\xE9es.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Il est important de noter que pour le quatre nages, les calculs sont bas\\xE9s sur les temps des 50m ou 100m de chaque nage, selon la distance totale du quatre nages.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 7\n          }, this), totalTime && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-blue-900 mb-2\",\n              children: \"Performance Pr\\xE9visionnelle Totale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl font-bold text-blue-600\",\n              children: totalTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Style de nage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full p-2 border border-gray-300 rounded-md\",\n                value: selectedStyle,\n                onChange: e => setSelectedStyle(e.target.value),\n                children: swimmingStyles.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: style.name,\n                  children: style.name\n                }, style.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Distance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full p-2 border border-gray-300 rounded-md\",\n                value: selectedDistance,\n                onChange: e => setSelectedDistance(Number(e.target.value)),\n                children: (_swimmingStyles$find = swimmingStyles.find(s => s.name === selectedStyle)) === null || _swimmingStyles$find === void 0 ? void 0 : _swimmingStyles$find.distances.map(distance => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: distance,\n                  children: [distance, \"m\"]\n                }, distance, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 9\n            }, this), selectedStyle === 'Quatre Nages' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"md:col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n                children: selectedDistance === 200 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 50m Papillon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.butterfly50m,\n                      onChange: e => handleMedleyTimeChange('butterfly50m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 50m Dos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.backstroke50m,\n                      onChange: e => handleMedleyTimeChange('backstroke50m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 50m Brasse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.breaststroke50m,\n                      onChange: e => handleMedleyTimeChange('breaststroke50m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 50m Crawl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.freestyle50m,\n                      onChange: e => handleMedleyTimeChange('freestyle50m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 100m Papillon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.butterfly100m,\n                      onChange: e => handleMedleyTimeChange('butterfly100m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 100m Dos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.backstroke100m,\n                      onChange: e => handleMedleyTimeChange('backstroke100m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 100m Brasse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.breaststroke100m,\n                      onChange: e => handleMedleyTimeChange('breaststroke100m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-2\",\n                      children: \"Meilleur temps 100m Crawl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full p-2 border border-gray-300 rounded-md\",\n                      value: medleyTimes.freestyle100m,\n                      onChange: e => handleMedleyTimeChange('freestyle100m', e.target.value),\n                      step: \"0.01\",\n                      min: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"md:col-span-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Meilleur temps sur 50m (en secondes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"w-full p-2 border border-gray-300 rounded-md\",\n                value: bestTime50m,\n                onChange: e => setBestTime50m(e.target.value),\n                step: \"0.01\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"md:col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\",\n                onClick: calculatePredictions,\n                children: \"Voir mes performances pr\\xE9visionnelles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 7\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600 mb-4\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 9\n          }, this), predictions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold mb-4\",\n                children: \"Temps interm\\xE9diaires pr\\xE9vus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n                children: predictions.map(pred => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white p-3 rounded-md shadow\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600\",\n                    children: pred.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-lg font-semibold\",\n                    children: pred.timeFormatted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 19\n                  }, this)]\n                }, pred.distance, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold mb-4\",\n                children: \"Graphique d'allure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-[300px]\",\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 800,\n                  height: 300,\n                  data: predictions,\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"label\",\n                    label: {\n                      value: 'Fractions de distance',\n                      position: 'bottom'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    dataKey: \"time\",\n                    label: {\n                      value: 'Temps (s)',\n                      angle: -90,\n                      position: 'left'\n                    },\n                    tickFormatter: value => formatTime(value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name) => {\n                      return name === \"Temps\" ? formatTime(value) : value;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"time\",\n                    stroke: \"#2563eb\",\n                    name: \"Temps\",\n                    strokeWidth: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SwimmingPerformancePredictor, \"elkdAg3dNyVgBESKic2yc01WM8c=\");\n_c = SwimmingPerformancePredictor;\nexport default SwimmingPerformancePredictor;\nvar _c;\n$RefreshReg$(_c, \"SwimmingPerformancePredictor\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","FaStopwatch","FaInfoCircle","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Timer","Info","jsxDEV","_jsxDEV","Fragment","_Fragment","swimmingStyles","name","distances","formatTime","timeInSeconds","minutes","Math","floor","seconds","centiseconds","round","toString","padStart","addFinalPercentage","time","calculatePredictedTimes","style","distance","bestTime50m","medleyTimes","predictions","time50m","time100m","butterfly","parseFloat","butterfly50m","backstroke","backstroke50m","breaststroke","breaststroke50m","freestyle","freestyle50m","laps","forEach","lap","index","push","length","timeFormatted","label","butterfly100m","backstroke100m","breaststroke100m","freestyle100m","firstLap","secondLap","additionalTimes","addTime","lapTime","i","calculateTotalTime","reduce","total","pred","SwimmingPerformancePredictor","_s","_swimmingStyles$find","selectedStyle","setSelectedStyle","selectedDistance","setSelectedDistance","setBestTime50m","setPredictions","error","setError","totalTime","setTotalTime","setMedleyTimes","calculatePredictions","times","some","isNaN","newPredictions","time50","find","s","handleMedleyTimeChange","field","value","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","best50m","onChange","e","setBest50m","target","placeholder","step","min","setDistance","parseInt","map","d","onClick","handleCalculate","p","toFixed","Number","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","position","angle","tickFormatter","formatter","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/SwimmingPerformancePredictor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../../components/template/Header';\nimport Footer from '../../components/template/Footer';\nimport { FaStopwatch, FaInfoCircle } from 'react-icons/fa';\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Timer, Info } from 'lucide-react';\n\nconst swimmingStyles = [\n  { name: 'Crawl', distances: [100, 200, 400, 800, 1500] },\n  { name: 'Papillon', distances: [100, 200] },\n  { name: 'Brasse', distances: [100, 200] },\n  { name: 'Dos', distances: [100, 200] },\n  { name: 'Quatre Nages', distances: [200, 400] },\n];\n\nconst formatTime = (timeInSeconds) => {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = Math.floor(timeInSeconds % 60);\n  const centiseconds = Math.round((timeInSeconds % 1) * 100);\n  \n  return `${minutes}:${seconds.toString().padStart(2, '0')}.${centiseconds.toString().padStart(2, '0')}`;\n};\n\nconst addFinalPercentage = (time) => {\n  return time * 1.049; // Ajoute 4.9%\n};\n\nconst calculatePredictedTimes = (style, distance, bestTime50m, medleyTimes) => {\n  const predictions = [];\n  const time50m = bestTime50m;\n\n  const time100m = style === 'Crawl' ? \n    addFinalPercentage((time50m + 1.5) + (time50m + 2.49)) :\n    style === 'Papillon' ?\n    addFinalPercentage((time50m + 1.5) + (time50m + 2.49)) :\n    style === 'Brasse' ?\n    addFinalPercentage((time50m + 1.5) + (time50m + 2.49)) :\n    addFinalPercentage((time50m + 1.5) + (time50m + 2.49));\n\n  switch(style) {\n    case 'Quatre Nages':\n      if (distance === 200 && medleyTimes) {\n        const butterfly = parseFloat(medleyTimes.butterfly50m);\n        const backstroke = parseFloat(medleyTimes.backstroke50m);\n        const breaststroke = parseFloat(medleyTimes.breaststroke50m);\n        const freestyle = parseFloat(medleyTimes.freestyle50m);\n\n        const laps = [\n          { style: 'Papillon', time: butterfly + 2.2 },\n          { style: 'Dos', time: backstroke + 3.09 },\n          { style: 'Brasse', time: breaststroke + 5.59 },\n          { style: 'Crawl', time: freestyle + 5.09 }\n        ];\n        laps.forEach((lap, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time),\n            label: `${lap.style} ${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      } else if (distance === 400 && medleyTimes) {\n        const butterfly = parseFloat(medleyTimes.butterfly100m);\n        const backstroke = parseFloat(medleyTimes.backstroke100m);\n        const breaststroke = parseFloat(medleyTimes.breaststroke100m);\n        const freestyle = parseFloat(medleyTimes.freestyle100m);\n\n        const laps = [\n          { style: 'Papillon', time: butterfly + 3.2 },\n          { style: 'Dos', time: backstroke + 6.19 },\n          { style: 'Brasse', time: breaststroke + 6 },\n          { style: 'Crawl', time: freestyle + 8.97 }\n        ];\n        laps.forEach((lap, index) => {\n          predictions.push({\n            distance: (index + 1) * 100,\n            time: index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(lap.time) : lap.time),\n            label: `${lap.style} ${index + 1}${index === 0 ? 'er' : 'ème'} 100m`\n          });\n        });\n      }\n      break;\n\n    case 'Crawl':\n      if (distance === 100) {\n        const firstLap = time50m + 1.5;\n        const secondLap = time50m + 2.49;\n        predictions.push(\n          { distance: 50, time: firstLap, timeFormatted: formatTime(firstLap), label: '1er 50m' },\n          { distance: 100, time: addFinalPercentage(secondLap), timeFormatted: formatTime(addFinalPercentage(secondLap)), label: '2ème 50m' }\n        );\n      } else if (distance === 200) {\n        const laps = [\n          time50m + 2.5,\n          time50m + 4.13,\n          time50m + 4.53,\n          time50m + 2.57\n        ];\n        laps.forEach((time, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(time) : time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(time) : time),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      } else if (distance === 400) {\n        const additionalTimes = [4.5, 6.13, 6, 2.59];\n        additionalTimes.forEach((addTime, index) => {\n          const lapTime = time100m + addTime;\n          predictions.push({\n            distance: (index + 1) * 100,\n            time: index === additionalTimes.length - 1 ? addFinalPercentage(lapTime) : lapTime,\n            timeFormatted: formatTime(index === additionalTimes.length - 1 ? addFinalPercentage(lapTime) : lapTime),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 100m`\n          });\n        });\n      } else if (distance === 800) {\n        predictions.push({\n          distance: 100,\n          time: time100m + 4.5,\n          timeFormatted: formatTime(time100m + 4.5),\n          label: '1er 100m'\n        });\n        for (let i = 0; i < 6; i++) {\n          predictions.push({\n            distance: (i + 2) * 100,\n            time: time100m + 6.13,\n            timeFormatted: formatTime(time100m + 6.13),\n            label: `${i + 2}ème 100m`\n          });\n        }\n        predictions.push({\n          distance: 800,\n          time: addFinalPercentage(time100m + 5),\n          timeFormatted: formatTime(addFinalPercentage(time100m + 5)),\n          label: '8ème 100m'\n        });\n      } else if (distance === 1500) {\n        predictions.push({\n          distance: 100,\n          time: time100m + 5,\n          timeFormatted: formatTime(time100m + 5),\n          label: '1er 100m'\n        });\n        for (let i = 0; i < 13; i++) {\n          predictions.push({\n            distance: (i + 2) * 100,\n            time: time100m + 7,\n            timeFormatted: formatTime(time100m + 7),\n            label: `${i + 2}ème 100m`\n          });\n        }\n        predictions.push({\n          distance: 1500,\n          time: addFinalPercentage(time100m + 6.5),\n          timeFormatted: formatTime(addFinalPercentage(time100m + 6.5)),\n          label: '15ème 100m'\n        });\n      }\n      break;\n\n    case 'Papillon':\n    case 'Brasse':\n    case 'Dos':\n      if (distance === 100) {\n        const firstLap = time50m + 1.5;\n        const secondLap = time50m + 2.49;\n        predictions.push(\n          { distance: 50, time: firstLap, timeFormatted: formatTime(firstLap), label: '1er 50m' },\n          { distance: 100, time: addFinalPercentage(secondLap), timeFormatted: formatTime(addFinalPercentage(secondLap)), label: '2ème 50m' }\n        );\n      } else if (distance === 200) {\n        const laps = [\n          time50m + 2.5,\n          time50m + 4.13,\n          time50m + 4.53,\n          time50m + 2.57\n        ];\n        laps.forEach((time, index) => {\n          predictions.push({\n            distance: (index + 1) * 50,\n            time: index === laps.length - 1 ? addFinalPercentage(time) : time,\n            timeFormatted: formatTime(index === laps.length - 1 ? addFinalPercentage(time) : time),\n            label: `${index + 1}${index === 0 ? 'er' : 'ème'} 50m`\n          });\n        });\n      }\n      break;\n  }\n\n  return predictions;\n};\n\nconst calculateTotalTime = (predictions) => {\n  return predictions.reduce((total, pred) => total + pred.time, 0);\n};\n\nconst SwimmingPerformancePredictor = () => {\n  const [selectedStyle, setSelectedStyle] = useState(swimmingStyles[0].name);\n  const [selectedDistance, setSelectedDistance] = useState(swimmingStyles[0].distances[0]);\n  const [bestTime50m, setBestTime50m] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState('');\n  const [totalTime, setTotalTime] = useState('');\n  const [medleyTimes, setMedleyTimes] = useState({\n    butterfly50m: '',\n    backstroke50m: '',\n    breaststroke50m: '',\n    freestyle50m: '',\n    butterfly100m: '',\n    backstroke100m: '',\n    breaststroke100m: '',\n    freestyle100m: '',\n  });\n\n  const calculatePredictions = () => {\n    if (selectedStyle === 'Quatre Nages') {\n      if (selectedDistance === 200) {\n        const times = [\n          medleyTimes.butterfly50m,\n          medleyTimes.backstroke50m,\n          medleyTimes.breaststroke50m,\n          medleyTimes.freestyle50m,\n        ];\n        \n        if (times.some(time => !time || isNaN(parseFloat(time)))) {\n          setError('Veuillez entrer tous les temps pour le 200m Quatre Nages');\n          return;\n        }\n      } else if (selectedDistance === 400) {\n        const times = [\n          medleyTimes.butterfly100m,\n          medleyTimes.backstroke100m,\n          medleyTimes.breaststroke100m,\n          medleyTimes.freestyle100m,\n        ];\n        \n        if (times.some(time => !time || isNaN(parseFloat(time)))) {\n          setError('Veuillez entrer tous les temps pour le 400m Quatre Nages');\n          return;\n        }\n      }\n      \n      setError('');\n      const newPredictions = calculatePredictedTimes(selectedStyle, selectedDistance, 0, medleyTimes);\n      setPredictions(newPredictions);\n      setTotalTime(formatTime(calculateTotalTime(newPredictions)));\n    } else {\n      const time50 = parseFloat(bestTime50m);\n      \n      if (isNaN(time50) || time50 <= 0) {\n        setError('Veuillez entrer un temps valide');\n        return;\n      }\n\n      setError('');\n      const newPredictions = calculatePredictedTimes(selectedStyle, selectedDistance, time50);\n      setPredictions(newPredictions);\n      setTotalTime(formatTime(calculateTotalTime(newPredictions)));\n    }\n  };\n\n  useEffect(() => {\n    const style = swimmingStyles.find(s => s.name === selectedStyle);\n    if (style) {\n      setSelectedDistance(style.distances[0]);\n    }\n  }, [selectedStyle]);\n\n  const handleMedleyTimeChange = (field, value) => {\n    setMedleyTimes(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  return (\n    <>\n      <Header />\n      <main>\n        <section className=\"py-5 bg-light\">\n\n\n\n          <div className=\"container\">\n            <div className=\"d-flex align-items-center mb-4\">\n              <FaStopwatch className=\"me-3 text-primary fs-2\" />\n              <h1 className=\"h3 fw-bold mb-0\">Prédicteur de Performance Natation</h1>\n            </div>\n\n            <div className=\"alert alert-info d-flex align-items-start gap-2\">\n              <FaInfoCircle className=\"mt-1\" />\n              <div>\n                <p className=\"mb-1\">\n                  Cet outil permet d'estimer vos temps intermédiaires sur différentes distances (100, 200, 400m) à partir de votre meilleur temps sur 50m.\n                </p>\n                <p className=\"mb-0\">\n                  Les calculs sont basés sur des formules de projection standards utilisées par les entraîneurs.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row g-3 mb-4\">\n              <div className=\"col-md-6\">\n                <label className=\"form-label\">Temps 50m (en secondes)</label>\n                <input\n                  type=\"number\"\n                  value={best50m}\n                  onChange={(e) => setBest50m(e.target.value)}\n                  className=\"form-control\"\n                  placeholder=\"ex : 32.75\"\n                  step=\"0.01\"\n                  min=\"0\"\n                />\n              </div>\n              <div className=\"col-md-6\">\n                <label className=\"form-label\">Distance à prédire</label>\n                <select\n                  className=\"form-select\"\n                  value={distance}\n                  onChange={(e) => setDistance(parseInt(e.target.value))}\n                >\n                  {[100, 200, 400].map(d => (\n                    <option key={d} value={d}>{d}m</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <button onClick={handleCalculate} className=\"btn btn-primary w-100\">\n                Calculer mes temps prévisionnels\n              </button>\n            </div>\n\n            {error && (\n              <div className=\"alert alert-danger\">{error}</div>\n            )}\n\n            {totalTime && (\n              <div className=\"alert alert-success\">\n                Temps total estimé : <strong>{totalTime}</strong>\n              </div>\n            )}\n\n            {predictions.length > 0 && (\n              <div className=\"card shadow-sm\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title mb-3\">Détails des temps intermédiaires</h5>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-bordered align-middle text-center\">\n                      <thead className=\"table-light\">\n                        <tr>\n                          <th>Fraction</th>\n                          <th>Temps (formaté)</th>\n                          <th>Temps brut (sec)</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {predictions.map((p, index) => (\n                          <tr key={index}>\n                            <td>{p.label}</td>\n                            <td><strong>{p.timeFormatted}</strong></td>\n                            <td>{p.time.toFixed(2)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n\n          <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\n      <div className=\"flex items-center gap-2 mb-6\">\n        <Timer className=\"w-6 h-6 text-blue-600\" />\n        <h1 className=\"text-2xl font-bold text-gray-800\">Prédicteur de Performance en Natation</h1>\n      </div>\n\n      <div className=\"mb-6 p-4 bg-amber-50 rounded-lg border border-amber-200\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          <Info className=\"w-5 h-5 text-amber-600\" />\n          <h2 className=\"text-lg font-semibold text-amber-900\">Notes Importantes</h2>\n        </div>\n        <ul className=\"list-disc list-inside space-y-2 text-amber-900\">\n          <li>Ces formules sont des estimations et peuvent varier en fonction des nageurs.</li>\n          <li>Elles supposent une progression constante et une endurance adaptée à chaque distance et chaque nage.</li>\n          <li>Ces formules sont très utiles pour les entraîneurs et les nageurs pour estimer les temps de course en fonction des performances passées.</li>\n          <li>Il est important de noter que pour le quatre nages, les calculs sont basés sur les temps des 50m ou 100m de chaque nage, selon la distance totale du quatre nages.</li>\n        </ul>\n      </div>\n\n      {totalTime && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h2 className=\"text-xl font-semibold text-blue-900 mb-2\">Performance Prévisionnelle Totale</h2>\n          <div className=\"text-3xl font-bold text-blue-600\">{totalTime}</div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Style de nage\n          </label>\n          <select\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n            value={selectedStyle}\n            onChange={(e) => setSelectedStyle(e.target.value)}\n          >\n            {swimmingStyles.map((style) => (\n              <option key={style.name} value={style.name}>\n                {style.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Distance\n          </label>\n          <select\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n            value={selectedDistance}\n            onChange={(e) => setSelectedDistance(Number(e.target.value))}\n          >\n            {swimmingStyles\n              .find((s) => s.name === selectedStyle)\n              ?.distances.map((distance) => (\n                <option key={distance} value={distance}>\n                  {distance}m\n                </option>\n              ))}\n          </select>\n        </div>\n\n        {selectedStyle === 'Quatre Nages' ? (\n          <div className=\"md:col-span-2\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {selectedDistance === 200 ? (\n                <>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 50m Papillon\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.butterfly50m}\n                      onChange={(e) => handleMedleyTimeChange('butterfly50m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 50m Dos\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.backstroke50m}\n                      onChange={(e) => handleMedleyTimeChange('backstroke50m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 50m Brasse\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.breaststroke50m}\n                      onChange={(e) => handleMedleyTimeChange('breaststroke50m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 50m Crawl\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.freestyle50m}\n                      onChange={(e) => handleMedleyTimeChange('freestyle50m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 100m Papillon\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.butterfly100m}\n                      onChange={(e) => handleMedleyTimeChange('butterfly100m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 100m Dos\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.backstroke100m}\n                      onChange={(e) => handleMedleyTimeChange('backstroke100m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 100m Brasse\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.breaststroke100m}\n                      onChange={(e) => handleMedleyTimeChange('breaststroke100m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meilleur temps 100m Crawl\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      value={medleyTimes.freestyle100m}\n                      onChange={(e) => handleMedleyTimeChange('freestyle100m', e.target.value)}\n                      step=\"0.01\"\n                      min=\"0\"\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Meilleur temps sur 50m (en secondes)\n            </label>\n            <input\n              type=\"number\"\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              value={bestTime50m}\n              onChange={(e) => setBestTime50m(e.target.value)}\n              step=\"0.01\"\n              min=\"0\"\n            />\n          </div>\n        )}\n\n        <div className=\"md:col-span-2\">\n          <button\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\"\n            onClick={calculatePredictions}\n          >\n            Voir mes performances prévisionnelles\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"text-red-600 mb-4\">\n          {error}\n        </div>\n      )}\n\n      {predictions.length > 0 && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h2 className=\"text-xl font-semibold mb-4\">Temps intermédiaires prévus</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {predictions.map((pred) => (\n                <div key={pred.distance} className=\"bg-white p-3 rounded-md shadow\">\n                  <div className=\"text-sm text-gray-600\">{pred.label}</div>\n                  <div className=\"text-lg font-semibold\">{pred.timeFormatted}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h2 className=\"text-xl font-semibold mb-4\">Graphique d'allure</h2>\n            <div className=\"w-full h-[300px]\">\n              <LineChart\n                width={800}\n                height={300}\n                data={predictions}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"label\"\n                  label={{ value: 'Fractions de distance', position: 'bottom' }}\n                />\n                <YAxis \n                  dataKey=\"time\"\n                  label={{ value: 'Temps (s)', angle: -90, position: 'left' }}\n                  tickFormatter={(value) => formatTime(value)}\n                />\n                <Tooltip \n                  formatter={(value, name) => {\n                    return name === \"Temps\" ? formatTime(value) : value;\n                  }}\n                />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"time\"\n                  stroke=\"#2563eb\"\n                  name=\"Temps\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n\n\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default SwimmingPerformancePredictor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}