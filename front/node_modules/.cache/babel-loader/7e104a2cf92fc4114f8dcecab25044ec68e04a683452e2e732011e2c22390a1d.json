{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/components/ui/forms/TextEditor.jsx\",\n  _s = $RefreshSig$();\n// TextEditor réutilisable\n// pour remplacer le <textarea> par TextEditor dans les composats \nimport { useEffect, useRef } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    font: []\n  }], [{\n    size: [\"small\", false, \"large\", \"huge\"]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\"], [{\n    script: \"sub\"\n  }, {\n    script: \"super\"\n  }], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }], [{\n    align: []\n  }], [\"blockquote\", \"code-block\"], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\nconst TextEditor = ({\n  value,\n  onChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const quillInstance = useRef(null);\n  useEffect(() => {\n    if (editorRef.current && !quillInstance.current) {\n      quillInstance.current = new Quill(editorRef.current, {\n        theme: \"snow\",\n        modules: modules // Appliquer la nouvelle toolbar\n      });\n      if (value) {\n        quillInstance.current.root.innerHTML = value;\n      }\n      quillInstance.current.on(\"text-change\", () => {\n        onChange(quillInstance.current.root.innerHTML);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    style: {\n      height: \"300px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(TextEditor, \"mreavz7gMSdBOClorUSWmXyWvbc=\");\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["useEffect","useRef","Quill","jsxDEV","_jsxDEV","modules","toolbar","header","font","size","color","background","script","list","align","TextEditor","value","onChange","_s","editorRef","quillInstance","current","theme","root","innerHTML","on","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/components/ui/forms/TextEditor.jsx"],"sourcesContent":["// TextEditor réutilisable\n// pour remplacer le <textarea> par TextEditor dans les composats \nimport { useEffect, useRef } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\n\nconst modules = {\n  toolbar: [\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ font: [] }],\n    [{ size: [\"small\", false, \"large\", \"huge\"] }],\n    [{ color: [] }, { background: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\"],\n    [{ script: \"sub\" }, { script: \"super\" }],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [{ align: [] }],\n    [\"blockquote\", \"code-block\"],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n\nconst TextEditor = ({ value, onChange }) => {\n  const editorRef = useRef(null);\n  const quillInstance = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current && !quillInstance.current) {\n      quillInstance.current = new Quill(editorRef.current, {\n        theme: \"snow\",\n        modules: modules, // Appliquer la nouvelle toolbar\n      });\n\n      if (value) {\n        quillInstance.current.root.innerHTML = value;\n      }\n\n      quillInstance.current.on(\"text-change\", () => {\n        onChange(quillInstance.current.root.innerHTML);\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} style={{ height: \"300px\" }} />;\n};\n\nexport default TextEditor;\n"],"mappings":";;AAAA;AACA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAE,CACP,CAAC;IAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;EAAE,CAAC,CAAC,EACvC,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,EACd,CAAC;IAAEC,IAAI,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;EAAE,CAAC,CAAC,EAC7C,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EAAE;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC,EACnC,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,EACzC,CAAC;IAAEC,MAAM,EAAE;EAAM,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAQ,CAAC,CAAC,EACxC,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,EAAE;IAAEA,IAAI,EAAE;EAAS,CAAC,CAAC,EACzC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC,EACf,CAAC,YAAY,EAAE,YAAY,CAAC,EAC5B,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAC1B,CAAC,OAAO,CAAC;AAEb,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMmB,aAAa,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAImB,SAAS,CAACE,OAAO,IAAI,CAACD,aAAa,CAACC,OAAO,EAAE;MAC/CD,aAAa,CAACC,OAAO,GAAG,IAAInB,KAAK,CAACiB,SAAS,CAACE,OAAO,EAAE;QACnDC,KAAK,EAAE,MAAM;QACbjB,OAAO,EAAEA,OAAO,CAAE;MACpB,CAAC,CAAC;MAEF,IAAIW,KAAK,EAAE;QACTI,aAAa,CAACC,OAAO,CAACE,IAAI,CAACC,SAAS,GAAGR,KAAK;MAC9C;MAEAI,aAAa,CAACC,OAAO,CAACI,EAAE,CAAC,aAAa,EAAE,MAAM;QAC5CR,QAAQ,CAACG,aAAa,CAACC,OAAO,CAACE,IAAI,CAACC,SAAS,CAAC;MAChD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOpB,OAAA;IAAKsB,GAAG,EAAEP,SAAU;IAACQ,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAACd,EAAA,CAtBIH,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}