{"ast":null,"code":"// exercises.js - Service corrigé\nimport api from './api';\n\n// Get all exercises\nexport const getExercises = () => {\n  console.log('Récupération de tous les exercices');\n  return api.get('/api/exercises');\n};\n\n// Get a specific exercise\nexport const getExercise = id => {\n  console.log(`Récupération de l'exercice ${id}`);\n  return api.get(`/api/exercises/${id}`);\n};\n\n// Create a new exercise\nexport const createExercise = exerciseData => {\n  console.log('Création d\\'un nouvel exercice', exerciseData);\n  return api.post('/api/exercises', exerciseData);\n};\n\n// Update an exercise\nexport const updateExercise = (id, exerciseData) => {\n  console.log(`Mise à jour de l'exercice ${id}`, exerciseData);\n  return api.put(`/api/exercises/${id}`, exerciseData);\n};\n\n// Delete an exercise\nexport const deleteExercise = id => {\n  console.log(`Suppression de l'exercice ${id}`);\n  return api.delete(`/api/exercises/${id}`);\n};\n\n// Test function for debugging\nexport const testExercisesAvailability = async () => {\n  try {\n    console.log('Test de disponibilité des exercices...');\n    const response = await api.get('/api/exercises');\n    console.log('Réponse du test de disponibilité des exercices:', response);\n\n    // Afficher les détails utiles au débogage\n    if (response.data && Array.isArray(response.data)) {\n      console.log(`Nombre d'exercices: ${response.data.length}`);\n      if (response.data.length > 0) {\n        console.log('Premier exercice:', response.data[0]);\n      }\n    } else {\n      console.log('Format de réponse inattendu:', response.data);\n    }\n    return {\n      success: true,\n      data: response.data,\n      count: Array.isArray(response.data) ? response.data.length : 0\n    };\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Erreur lors du test de disponibilité des exercices:', error);\n    console.error('Message d\\'erreur:', error.message);\n    console.error('Statut:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n    console.error('Données d\\'erreur:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    return {\n      success: false,\n      error: error.message,\n      response: error.response\n    };\n  }\n};","map":{"version":3,"names":["api","getExercises","console","log","get","getExercise","id","createExercise","exerciseData","post","updateExercise","put","deleteExercise","delete","testExercisesAvailability","response","data","Array","isArray","length","success","count","error","_error$response","_error$response2","message","status"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/services/exercises.js"],"sourcesContent":["// exercises.js - Service corrigé\nimport api from './api';\n\n// Get all exercises\nexport const getExercises = () => {\n  console.log('Récupération de tous les exercices');\n  return api.get('/api/exercises');\n};\n\n// Get a specific exercise\nexport const getExercise = (id) => {\n  console.log(`Récupération de l'exercice ${id}`);\n  return api.get(`/api/exercises/${id}`);\n};\n\n// Create a new exercise\nexport const createExercise = (exerciseData) => {\n  console.log('Création d\\'un nouvel exercice', exerciseData);\n  return api.post('/api/exercises', exerciseData);\n};\n\n// Update an exercise\nexport const updateExercise = (id, exerciseData) => {\n  console.log(`Mise à jour de l'exercice ${id}`, exerciseData);\n  return api.put(`/api/exercises/${id}`, exerciseData);\n};\n\n// Delete an exercise\nexport const deleteExercise = (id) => {\n  console.log(`Suppression de l'exercice ${id}`);\n  return api.delete(`/api/exercises/${id}`);\n};\n\n// Test function for debugging\nexport const testExercisesAvailability = async () => {\n  try {\n    console.log('Test de disponibilité des exercices...');\n    const response = await api.get('/api/exercises');\n    console.log('Réponse du test de disponibilité des exercices:', response);\n    \n    // Afficher les détails utiles au débogage\n    if (response.data && Array.isArray(response.data)) {\n      console.log(`Nombre d'exercices: ${response.data.length}`);\n      if (response.data.length > 0) {\n        console.log('Premier exercice:', response.data[0]);\n      }\n    } else {\n      console.log('Format de réponse inattendu:', response.data);\n    }\n    \n    return {\n      success: true,\n      data: response.data,\n      count: Array.isArray(response.data) ? response.data.length : 0\n    };\n  } catch (error) {\n    console.error('Erreur lors du test de disponibilité des exercices:', error);\n    console.error('Message d\\'erreur:', error.message);\n    console.error('Statut:', error.response?.status);\n    console.error('Données d\\'erreur:', error.response?.data);\n    \n    return {\n      success: false,\n      error: error.message,\n      response: error.response\n    };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}