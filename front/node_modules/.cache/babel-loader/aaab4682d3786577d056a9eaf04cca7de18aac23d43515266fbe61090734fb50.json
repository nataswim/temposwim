{"ast":null,"code":"// mylists.js  # API pour la gestion des listes personnelles\nimport api from './api';\n\n// Get all mylists\nexport const getMylists = () => {\n  console.log('Récupération de toutes les listes personnelles');\n  return api.get('/api/mylists');\n};\n\n// Get a specific mylist\nexport const getMylist = id => {\n  return api.get(`/mylists/${id}`);\n};\n\n// Create a new mylist\nexport const createMylist = mylistData => {\n  console.log('Création d\\'une nouvelle liste personnelle', mylistData);\n  return api.post('/api/mylists', mylistData);\n};\n\n// Update a mylist\nexport const updateMylist = (id, mylistData) => {\n  // Valider que mylistData contient user_id et title\n  if (!mylistData.user_id || !mylistData.title) {\n    console.error('Données de liste invalides pour mise à jour:', mylistData);\n  }\n\n  // Assurez-vous que les données sont formatées correctement\n  const validatedData = {\n    user_id: mylistData.user_id,\n    title: mylistData.title,\n    description: mylistData.description || null\n  };\n  return api.put(`/mylists/${id}`, validatedData);\n};\n\n// Delete a mylist\nexport const deleteMylist = id => {\n  return api.delete(`/mylists/${id}`);\n};\nexport const duplicateMylist = id => {\n  return api.post(`/mylists/${id}/duplicate`);\n};","map":{"version":3,"names":["api","getMylists","console","log","get","getMylist","id","createMylist","mylistData","post","updateMylist","user_id","title","error","validatedData","description","put","deleteMylist","delete","duplicateMylist"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/services/mylists.js"],"sourcesContent":["// mylists.js  # API pour la gestion des listes personnelles\nimport api from './api';\n\n// Get all mylists\nexport const getMylists = () => {\n  console.log('Récupération de toutes les listes personnelles');\n  return api.get('/api/mylists');\n};\n\n// Get a specific mylist\nexport const getMylist = (id) => {\n  return api.get(`/mylists/${id}`);\n};\n\n// Create a new mylist\nexport const createMylist = (mylistData) => {\n  console.log('Création d\\'une nouvelle liste personnelle', mylistData);\n  return api.post('/api/mylists', mylistData);\n};\n\n// Update a mylist\nexport const updateMylist = (id, mylistData) => {\n  // Valider que mylistData contient user_id et title\n  if (!mylistData.user_id || !mylistData.title) {\n    console.error('Données de liste invalides pour mise à jour:', mylistData);\n  }\n  \n  // Assurez-vous que les données sont formatées correctement\n  const validatedData = {\n    user_id: mylistData.user_id,\n    title: mylistData.title,\n    description: mylistData.description || null\n  };\n  \n  return api.put(`/mylists/${id}`, validatedData);\n};\n\n// Delete a mylist\nexport const deleteMylist = (id) => {\n  return api.delete(`/mylists/${id}`);\n};\nexport const duplicateMylist = (id) => {\n  return api.post(`/mylists/${id}/duplicate`);\n};"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9BC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;EAC7D,OAAOH,GAAG,CAACI,GAAG,CAAC,cAAc,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK;EAC/B,OAAON,GAAG,CAACI,GAAG,CAAC,YAAYE,EAAE,EAAE,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,UAAU,IAAK;EAC1CN,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEK,UAAU,CAAC;EACrE,OAAOR,GAAG,CAACS,IAAI,CAAC,cAAc,EAAED,UAAU,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAGA,CAACJ,EAAE,EAAEE,UAAU,KAAK;EAC9C;EACA,IAAI,CAACA,UAAU,CAACG,OAAO,IAAI,CAACH,UAAU,CAACI,KAAK,EAAE;IAC5CV,OAAO,CAACW,KAAK,CAAC,8CAA8C,EAAEL,UAAU,CAAC;EAC3E;;EAEA;EACA,MAAMM,aAAa,GAAG;IACpBH,OAAO,EAAEH,UAAU,CAACG,OAAO;IAC3BC,KAAK,EAAEJ,UAAU,CAACI,KAAK;IACvBG,WAAW,EAAEP,UAAU,CAACO,WAAW,IAAI;EACzC,CAAC;EAED,OAAOf,GAAG,CAACgB,GAAG,CAAC,YAAYV,EAAE,EAAE,EAAEQ,aAAa,CAAC;AACjD,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAIX,EAAE,IAAK;EAClC,OAAON,GAAG,CAACkB,MAAM,CAAC,YAAYZ,EAAE,EAAE,CAAC;AACrC,CAAC;AACD,OAAO,MAAMa,eAAe,GAAIb,EAAE,IAAK;EACrC,OAAON,GAAG,CAACS,IAAI,CAAC,YAAYH,EAAE,YAAY,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}