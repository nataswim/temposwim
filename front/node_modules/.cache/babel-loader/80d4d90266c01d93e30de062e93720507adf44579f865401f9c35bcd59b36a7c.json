{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.jsx  \n// Gestion de l'authentification  # Contexte React pour gérer l'état global\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport AuthService from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [authError, setAuthError] = useState(null);\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        if (AuthService.isAuthenticated()) {\n          const userData = await AuthService.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Erreur d\\'initialisation de l\\'authentification:', error);\n        // Ne pas supprimer le token en cas d'erreur\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    try {\n      const response = await AuthService.login(email, password);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    setIsLoading(true);\n    try {\n      const response = await AuthService.register(username, email, password);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    setIsLoading(true);\n    try {\n      await AuthService.logout();\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Erreur de déconnexion:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const refreshToken = async () => {\n    try {\n      const response = await AuthService.refreshToken();\n      setUser(response.user);\n      return response;\n    } catch (error) {\n      setUser(null);\n      setIsAuthenticated(false);\n      throw error;\n    }\n  };\n\n  // fonctions  contexte AuthContext\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role_id) === 1;\n  };\n  const isUser = () => {\n    return (user === null || user === void 0 ? void 0 : user.role_id) === 2;\n  };\n  const isAthlete = () => {\n    return (user === null || user === void 0 ? void 0 : user.role_id) === 3;\n  };\n  const isCoach = () => {\n    return (user === null || user === void 0 ? void 0 : user.role_id) === 4;\n  };\n  const hasUserAccess = () => {\n    // Tous les rôles ont accès aux pages utilisateur\n    return isAuthenticated && (isAdmin() || isUser() || isAthlete() || isCoach());\n  };\n  const hasAdminAccess = () => {\n    // Seul l'admin a accès aux pages d'administration\n    return isAuthenticated && isAdmin();\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      login,\n      register,\n      logout,\n      refreshToken,\n      isAdmin,\n      isUser,\n      isAthlete,\n      isCoach,\n      hasUserAccess,\n      hasAdminAccess\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthProvider, \"cwAcmkC0GmxXObXm6IlU2trTnOw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","AuthService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","authError","setAuthError","initAuth","userData","getCurrentUser","error","console","login","email","password","response","register","username","logout","refreshToken","isAdmin","role_id","isUser","isAthlete","isCoach","hasUserAccess","hasAdminAccess","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx  \n// Gestion de l'authentification  # Contexte React pour gérer l'état global\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport AuthService from '../services/auth';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [authError, setAuthError] = useState(null);\n\n  \n  \n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        if (AuthService.isAuthenticated()) {\n          const userData = await AuthService.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Erreur d\\'initialisation de l\\'authentification:', error);\n        // Ne pas supprimer le token en cas d'erreur\n      } finally {\n        setIsLoading(false);\n      }\n    };\n  \n    initAuth();\n  }, []);\n\n\n\n  \n  const login = async (email, password) => {\n    setIsLoading(true);\n    try {\n      const response = await AuthService.login(email, password);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (username, email, password) => {\n    setIsLoading(true);\n    try {\n      const response = await AuthService.register(username, email, password);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setIsLoading(true);\n    try {\n      await AuthService.logout();\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Erreur de déconnexion:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const response = await AuthService.refreshToken();\n      setUser(response.user);\n      return response;\n    } catch (error) {\n      setUser(null);\n      setIsAuthenticated(false);\n      throw error;\n    }\n  };\n\n  // fonctions  contexte AuthContext\nconst isAdmin = () => {\n  return user?.role_id === 1;\n};\n\nconst isUser = () => {\n  return user?.role_id === 2;\n};\n\nconst isAthlete = () => {\n  return user?.role_id === 3;\n};\n\nconst isCoach = () => {\n  return user?.role_id === 4;\n};\n\nconst hasUserAccess = () => {\n  // Tous les rôles ont accès aux pages utilisateur\n  return isAuthenticated && (isAdmin() || isUser() || isAthlete() || isCoach());\n};\n\nconst hasAdminAccess = () => {\n  // Seul l'admin a accès aux pages d'administration\n  return isAuthenticated && isAdmin();\n};\n\nreturn (\n  <AuthContext.Provider\n    value={{\n      user,\n      isAuthenticated,\n      isLoading,\n      login,\n      register,\n      logout,\n      refreshToken,\n      isAdmin,\n      isUser,\n      isAthlete,\n      isCoach,\n      hasUserAccess,\n      hasAdminAccess\n    }}\n  >\n    {children}\n  </AuthContext.Provider>\n);\n};"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAIhDC,SAAS,CAAC,MAAM;IACd,MAAMgB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,IAAIf,WAAW,CAACS,eAAe,CAAC,CAAC,EAAE;UACjC,MAAMO,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,cAAc,CAAC,CAAC;UACnDT,OAAO,CAACQ,QAAQ,CAAC;UACjBN,kBAAkB,CAAC,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;QACxE;MACF,CAAC,SAAS;QACRN,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAKN,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCV,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMvB,WAAW,CAACoB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACzDd,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MACtBG,kBAAkB,CAAC,IAAI,CAAC;MACxB,OAAOa,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMA,KAAK;IACb,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEJ,KAAK,EAAEC,QAAQ,KAAK;IACpDV,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMvB,WAAW,CAACwB,QAAQ,CAACC,QAAQ,EAAEJ,KAAK,EAAEC,QAAQ,CAAC;MACtEd,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MACtBG,kBAAkB,CAAC,IAAI,CAAC;MACxB,OAAOa,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMA,KAAK;IACb,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBd,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMZ,WAAW,CAAC0B,MAAM,CAAC,CAAC;MAC1BlB,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMvB,WAAW,CAAC2B,YAAY,CAAC,CAAC;MACjDnB,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MACtB,OAAOgB,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdV,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;MACzB,MAAMQ,KAAK;IACb;EACF,CAAC;;EAED;EACF,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAArB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,OAAO,MAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,OAAO,CAAAvB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,OAAO,MAAK,CAAC;EAC5B,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtB,OAAO,CAAAxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,OAAO,MAAK,CAAC;EAC5B,CAAC;EAED,MAAMG,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAAzB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,OAAO,MAAK,CAAC;EAC5B,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,OAAOxB,eAAe,KAAKmB,OAAO,CAAC,CAAC,IAAIE,MAAM,CAAC,CAAC,IAAIC,SAAS,CAAC,CAAC,IAAIC,OAAO,CAAC,CAAC,CAAC;EAC/E,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,OAAOzB,eAAe,IAAImB,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAACgC,QAAQ;IACnBC,KAAK,EAAE;MACL7B,IAAI;MACJE,eAAe;MACfE,SAAS;MACTS,KAAK;MACLI,QAAQ;MACRE,MAAM;MACNC,YAAY;MACZC,OAAO;MACPE,MAAM;MACNC,SAAS;MACTC,OAAO;MACPC,aAAa;MACbC;IACF,CAAE;IAAA7B,QAAA,EAEDA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEzB,CAAC;AAAClC,EAAA,CAnIWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}