{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\n// 🎨 Couleurs distinctes pour chaque nageur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#2563eb', '#dc2626', '#16a34a'];\n\n// 🏊 Liste initiale des nageurs avec leurs états\nconst INITIAL_SWIMMERS = [{\n  id: 1,\n  name: 'Swimmer 1',\n  laps: [],\n  finishTime: null\n}, {\n  id: 2,\n  name: 'Swimmer 2',\n  laps: [],\n  finishTime: null\n}, {\n  id: 3,\n  name: 'Swimmer 3',\n  laps: [],\n  finishTime: null\n}];\nexport const Chronometer = () => {\n  _s();\n  const [time, setTime] = useState(0); // ⏱ Temps global du chronomètre\n  const [isRunning, setIsRunning] = useState(false); // ▶️ Statut du chronomètre\n  const [intervalId, setIntervalId] = useState(null); // ⏲ ID de l'interval\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS); // 🏊 États des nageurs\n  const [raceFinished, setRaceFinished] = useState(false); // 🏁 Statut de fin de course\n\n  // 🔄 Formater le temps (ms) en MM:SS.ms\n  const formatTime = ms => {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor(ms % 60000 / 1000);\n    const milliseconds = Math.floor(ms % 1000 / 10);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n\n  // 🕓 Calculer l'écart entre le meilleur temps et un nageur donné\n  const calculateTimeDifference = (finishTime, fastestTime) => {\n    const diff = finishTime - fastestTime;\n    return diff === 0 ? '-' : `+${formatTime(diff)}`;\n  };\n\n  // 📊 Calculer la moyenne des temps intermédiaires pour un nageur\n  const calculateAverageLap = swimmerId => {\n    const swimmer = swimmers.find(s => s.id === swimmerId);\n    if (!swimmer || swimmer.laps.length === 0) return '00:00.00';\n    const avg = swimmer.laps.reduce((acc, lap) => acc + lap.splitTime, 0) / swimmer.laps.length;\n    return formatTime(avg);\n  };\n\n  // ▶️⏸ Gérer le démarrage/pause du chronomètre\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = window.setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(prev => !prev);\n  }, [isRunning, intervalId, raceFinished]);\n\n  // 🏁 Enregistrer un tour pour un nageur\n  const recordLap = swimmerId => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === swimmerId) {\n        const lastLapTime = swimmer.laps.length > 0 ? swimmer.laps[swimmer.laps.length - 1].time : 0;\n        return {\n          ...swimmer,\n          laps: [...swimmer.laps, {\n            number: swimmer.laps.length + 1,\n            time,\n            splitTime: time - lastLapTime\n          }]\n        };\n      }\n      return swimmer;\n    }));\n  };\n\n  // 🏁 Marquer un nageur comme ayant terminé la course\n  const finishSwimmer = swimmerId => {\n    if (!isRunning) return;\n    setSwimmers(prev => prev.map(swimmer => {\n      if (swimmer.id === swimmerId && swimmer.finishTime === null) {\n        return {\n          ...swimmer,\n          finishTime: time\n        };\n      }\n      return swimmer;\n    }));\n  };\n\n  // 🔄 Réinitialiser la course\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n\n  // 🧹 Nettoyage à la destruction\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n\n  // 📈 Générer les données du graphique\n  const chartData = swimmers[0].laps.map((_, index) => {\n    const data = {\n      lap: index + 1\n    };\n    swimmers.forEach(swimmer => {\n      if (swimmer.laps[index]) {\n        data[`swimmer${swimmer.id}`] = swimmer.laps[index].splitTime / 1000;\n      }\n    });\n    return data;\n  });\n\n  // 🏆 Calculer les résultats finaux triés\n  const getRaceResults = () => {\n    var _finished$;\n    const finished = swimmers.filter(s => s.finishTime !== null).sort((a, b) => a.finishTime - b.finishTime);\n    const fastestTime = ((_finished$ = finished[0]) === null || _finished$ === void 0 ? void 0 : _finished$.finishTime) || 0;\n    if (finished.length === swimmers.length) {\n      setRaceFinished(true);\n      clearInterval(intervalId);\n      setIsRunning(false);\n    }\n    return finished.map(s => ({\n      ...s,\n      timeDiff: calculateTimeDifference(s.finishTime, fastestTime)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 bg-white rounded-xl shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-6xl font-mono font-bold mb-4\",\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTimer,\n          disabled: raceFinished,\n          className: \"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\",\n          children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 48\n          }, this), isRunning ? 'Pause' : 'Start']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          className: \"flex items-center gap-2 px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), \"Reset\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\",\n        children: swimmers.map((swimmer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 rounded-lg border-2\",\n          style: {\n            borderColor: COLORS[index]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-3\",\n            children: swimmer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => recordLap(swimmer.id),\n              disabled: !isRunning || raceFinished || swimmer.finishTime !== null,\n              className: \"flex items-center gap-1 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\",\n              children: [/*#__PURE__*/_jsxDEV(Flag, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), \"Lap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => finishSwimmer(swimmer.id),\n              disabled: !isRunning || raceFinished || swimmer.finishTime !== null,\n              className: \"flex items-center gap-1 px-3 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\",\n              children: [/*#__PURE__*/_jsxDEV(Trophy, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), \"Finish\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-sm\",\n            children: [\"Laps: \", swimmer.laps.length, \" | Avg: \", calculateAverageLap(swimmer.id)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, swimmer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), (raceFinished || swimmers.some(s => s.finishTime !== null)) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 bg-gray-50 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 flex items-center gap-2 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(Trophy, {\n          size: 24,\n          className: \"text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), \"Final Rankings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Swimmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Final Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getRaceResults().map((swimmer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 font-semibold\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: swimmer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 font-mono\",\n              children: formatTime(swimmer.finishTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 font-mono\",\n              children: swimmer.timeDiff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)]\n          }, swimmer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Lap Time Progression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"lap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), swimmers.map((swimmer, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: `swimmer${swimmer.id}`,\n            name: swimmer.name,\n            stroke: COLORS[index],\n            strokeWidth: 2,\n            dot: {\n              fill: COLORS[index]\n            }\n          }, swimmer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Chronometer, \"h8W5psyUUaBz0PcWHKUrWXqAQE8=\");\n_c = Chronometer;\nvar _c;\n$RefreshReg$(_c, \"Chronometer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Play","Pause","Flag","RotateCcw","Trophy","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","COLORS","INITIAL_SWIMMERS","id","name","laps","finishTime","Chronometer","_s","time","setTime","isRunning","setIsRunning","intervalId","setIntervalId","swimmers","setSwimmers","raceFinished","setRaceFinished","formatTime","ms","minutes","Math","floor","seconds","milliseconds","toString","padStart","calculateTimeDifference","fastestTime","diff","calculateAverageLap","swimmerId","swimmer","find","s","length","avg","reduce","acc","lap","splitTime","toggleTimer","window","setInterval","prev","clearInterval","recordLap","map","lastLapTime","number","finishSwimmer","reset","chartData","_","index","data","forEach","getRaceResults","_finished$","finished","filter","sort","a","b","timeDiff","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","style","borderColor","some","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","dot","fill","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/pages/gadgets/Chronometer.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, Flag, RotateCcw, Trophy } from 'lucide-react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend\n} from 'recharts';\n\n// 🎨 Couleurs distinctes pour chaque nageur\nconst COLORS = ['#2563eb', '#dc2626', '#16a34a'];\n\n// 🏊 Liste initiale des nageurs avec leurs états\nconst INITIAL_SWIMMERS = [\n  { id: 1, name: 'Swimmer 1', laps: [], finishTime: null },\n  { id: 2, name: 'Swimmer 2', laps: [], finishTime: null },\n  { id: 3, name: 'Swimmer 3', laps: [], finishTime: null }\n];\n\nexport const Chronometer = () => {\n  const [time, setTime] = useState(0); // ⏱ Temps global du chronomètre\n  const [isRunning, setIsRunning] = useState(false); // ▶️ Statut du chronomètre\n  const [intervalId, setIntervalId] = useState(null); // ⏲ ID de l'interval\n  const [swimmers, setSwimmers] = useState(INITIAL_SWIMMERS); // 🏊 États des nageurs\n  const [raceFinished, setRaceFinished] = useState(false); // 🏁 Statut de fin de course\n\n  // 🔄 Formater le temps (ms) en MM:SS.ms\n  const formatTime = (ms) => {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor((ms % 60000) / 1000);\n    const milliseconds = Math.floor((ms % 1000) / 10);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n\n  // 🕓 Calculer l'écart entre le meilleur temps et un nageur donné\n  const calculateTimeDifference = (finishTime, fastestTime) => {\n    const diff = finishTime - fastestTime;\n    return diff === 0 ? '-' : `+${formatTime(diff)}`;\n  };\n\n  // 📊 Calculer la moyenne des temps intermédiaires pour un nageur\n  const calculateAverageLap = (swimmerId) => {\n    const swimmer = swimmers.find(s => s.id === swimmerId);\n    if (!swimmer || swimmer.laps.length === 0) return '00:00.00';\n    const avg = swimmer.laps.reduce((acc, lap) => acc + lap.splitTime, 0) / swimmer.laps.length;\n    return formatTime(avg);\n  };\n\n  // ▶️⏸ Gérer le démarrage/pause du chronomètre\n  const toggleTimer = useCallback(() => {\n    if (raceFinished) return;\n    if (!isRunning) {\n      const id = window.setInterval(() => setTime(prev => prev + 10), 10);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n    setIsRunning(prev => !prev);\n  }, [isRunning, intervalId, raceFinished]);\n\n  // 🏁 Enregistrer un tour pour un nageur\n  const recordLap = (swimmerId) => {\n    if (!isRunning || raceFinished) return;\n    setSwimmers(prev =>\n      prev.map(swimmer => {\n        if (swimmer.id === swimmerId) {\n          const lastLapTime = swimmer.laps.length > 0 ? swimmer.laps[swimmer.laps.length - 1].time : 0;\n          return {\n            ...swimmer,\n            laps: [...swimmer.laps, {\n              number: swimmer.laps.length + 1,\n              time,\n              splitTime: time - lastLapTime\n            }]\n          };\n        }\n        return swimmer;\n      })\n    );\n  };\n\n  // 🏁 Marquer un nageur comme ayant terminé la course\n  const finishSwimmer = (swimmerId) => {\n    if (!isRunning) return;\n    setSwimmers(prev =>\n      prev.map(swimmer => {\n        if (swimmer.id === swimmerId && swimmer.finishTime === null) {\n          return { ...swimmer, finishTime: time };\n        }\n        return swimmer;\n      })\n    );\n  };\n\n  // 🔄 Réinitialiser la course\n  const reset = () => {\n    clearInterval(intervalId);\n    setTime(0);\n    setSwimmers(INITIAL_SWIMMERS);\n    setIsRunning(false);\n    setIntervalId(null);\n    setRaceFinished(false);\n  };\n\n  // 🧹 Nettoyage à la destruction\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n\n  // 📈 Générer les données du graphique\n  const chartData = swimmers[0].laps.map((_, index) => {\n    const data = { lap: index + 1 };\n    swimmers.forEach(swimmer => {\n      if (swimmer.laps[index]) {\n        data[`swimmer${swimmer.id}`] = swimmer.laps[index].splitTime / 1000;\n      }\n    });\n    return data;\n  });\n\n  // 🏆 Calculer les résultats finaux triés\n  const getRaceResults = () => {\n    const finished = swimmers\n      .filter(s => s.finishTime !== null)\n      .sort((a, b) => a.finishTime - b.finishTime);\n    const fastestTime = finished[0]?.finishTime || 0;\n    if (finished.length === swimmers.length) {\n      setRaceFinished(true);\n      clearInterval(intervalId);\n      setIsRunning(false);\n    }\n    return finished.map(s => ({\n      ...s,\n      timeDiff: calculateTimeDifference(s.finishTime, fastestTime)\n    }));\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-xl shadow-lg\">\n      {/* 🖥 Affichage principal du chronomètre */}\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-6xl font-mono font-bold mb-4\">{formatTime(time)}</h2>\n\n        {/* 🕹 Boutons principaux */}\n        <div className=\"flex justify-center gap-4 mb-8\">\n          <button\n            onClick={toggleTimer}\n            disabled={raceFinished}\n            className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n          >\n            {isRunning ? <Pause size={24} /> : <Play size={24} />}\n            {isRunning ? 'Pause' : 'Start'}\n          </button>\n          <button\n            onClick={reset}\n            className=\"flex items-center gap-2 px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n          >\n            <RotateCcw size={24} />\n            Reset\n          </button>\n        </div>\n\n        {/* 👤 Nageurs */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          {swimmers.map((swimmer, index) => (\n            <div key={swimmer.id} className=\"p-4 rounded-lg border-2\" style={{ borderColor: COLORS[index] }}>\n              <h3 className=\"text-lg font-semibold mb-3\">{swimmer.name}</h3>\n              <div className=\"flex gap-2 justify-center\">\n                <button\n                  onClick={() => recordLap(swimmer.id)}\n                  disabled={!isRunning || raceFinished || swimmer.finishTime !== null}\n                  className=\"flex items-center gap-1 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                >\n                  <Flag size={20} />\n                  Lap\n                </button>\n                <button\n                  onClick={() => finishSwimmer(swimmer.id)}\n                  disabled={!isRunning || raceFinished || swimmer.finishTime !== null}\n                  className=\"flex items-center gap-1 px-3 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\"\n                >\n                  <Trophy size={20} />\n                  Finish\n                </button>\n              </div>\n              <div className=\"mt-3 text-sm\">\n                Laps: {swimmer.laps.length} | Avg: {calculateAverageLap(swimmer.id)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* 🏁 Résultats */}\n      {(raceFinished || swimmers.some(s => s.finishTime !== null)) && (\n        <div className=\"mb-8 bg-gray-50 p-4 rounded-lg\">\n          <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 justify-center\">\n            <Trophy size={24} className=\"text-yellow-500\" />\n            Final Rankings\n          </h3>\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-100\">\n              <tr>\n                <th className=\"px-4 py-2 text-left\">Position</th>\n                <th className=\"px-4 py-2 text-left\">Swimmer</th>\n                <th className=\"px-4 py-2 text-left\">Final Time</th>\n                <th className=\"px-4 py-2 text-left\">Difference</th>\n              </tr>\n            </thead>\n            <tbody>\n              {getRaceResults().map((swimmer, index) => (\n                <tr key={swimmer.id} className=\"border-b\">\n                  <td className=\"px-4 py-2 font-semibold\">{index + 1}</td>\n                  <td className=\"px-4 py-2\">{swimmer.name}</td>\n                  <td className=\"px-4 py-2 font-mono\">{formatTime(swimmer.finishTime)}</td>\n                  <td className=\"px-4 py-2 font-mono\">{swimmer.timeDiff}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {/* 📊 Graphique de progression */}\n      {chartData.length > 0 && (\n        <div className=\"h-64\">\n          <h3 className=\"text-xl font-semibold mb-4\">Lap Time Progression</h3>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"lap\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              {swimmers.map((swimmer, index) => (\n                <Line\n                  key={swimmer.id}\n                  type=\"monotone\"\n                  dataKey={`swimmer${swimmer.id}`}\n                  name={swimmer.name}\n                  stroke={COLORS[index]}\n                  strokeWidth={2}\n                  dot={{ fill: COLORS[index] }}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}