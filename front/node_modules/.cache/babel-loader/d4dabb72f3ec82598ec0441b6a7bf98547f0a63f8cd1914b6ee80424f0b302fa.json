{"ast":null,"code":"// src/services/swimsets.js\n// API pour la gestion des s√©ries de natation\n\nimport api from './api';\n\n/**\n * üá¨üáß Get all swim sets\n * üá´üá∑ R√©cup√©rer toutes les s√©ries de natation\n * \n * @returns {Promise} - API response\n */\nexport const getSwimSets = () => {\n  console.log('R√©cup√©ration de toutes les s√©ries de natation');\n  return api.get('/api/swim-sets');\n};\n\n/**\n * üá¨üáß Get a specific swim set by ID\n * üá´üá∑ R√©cup√©rer une s√©rie de natation sp√©cifique par son ID\n * \n * @param {number} id - The swim set ID\n * @returns {Promise} - API response\n */\nexport const getSwimSet = id => {\n  console.log(`R√©cup√©ration de la s√©rie de natation ${id}`);\n  return api.get(`/api/swim-sets/${id}`);\n};\n\n/**\n * üá¨üáß Create a new swim set\n * üá´üá∑ Cr√©er une nouvelle s√©rie de natation\n * \n * @param {Object} swimSetData - The swim set data\n * @returns {Promise} - API response\n */\nexport const createSwimSet = swimSetData => {\n  console.log('Cr√©ation d\\'une nouvelle s√©rie de natation', swimSetData);\n  return api.post('/api/swim-sets', swimSetData);\n};\n\n/**\n * üá¨üáß Update an existing swim set\n * üá´üá∑ Mettre √† jour une s√©rie de natation existante\n * \n * @param {number} id - The swim set ID\n * @param {Object} swimSetData - The updated swim set data\n * @returns {Promise} - API response\n */\nexport const updateSwimSet = (id, swimSetData) => {\n  console.log(`Mise √† jour de la s√©rie de natation ${id}`, swimSetData);\n  return api.post(`/api/swim-sets/${id}`, {\n    ...swimSetData,\n    _method: 'PATCH' // Laravel form method spoofing\n  });\n};\n\n/**\n * üá¨üáß Delete a swim set\n * üá´üá∑ Supprimer une s√©rie de natation\n * \n * @param {number} id - The swim set ID\n * @returns {Promise} - API response\n */\nexport const deleteSwimSet = id => {\n  console.log(`Suppression de la s√©rie de natation ${id}`);\n  return api.delete(`/api/swim-sets/${id}`);\n};","map":{"version":3,"names":["api","getSwimSets","console","log","get","getSwimSet","id","createSwimSet","swimSetData","post","updateSwimSet","_method","deleteSwimSet","delete"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/services/swimsets.js"],"sourcesContent":["// src/services/swimsets.js\n// API pour la gestion des s√©ries de natation\n\nimport api from './api';\n\n/**\n * üá¨üáß Get all swim sets\n * üá´üá∑ R√©cup√©rer toutes les s√©ries de natation\n * \n * @returns {Promise} - API response\n */\nexport const getSwimSets = () => {\n  console.log('R√©cup√©ration de toutes les s√©ries de natation');\n  return api.get('/api/swim-sets');\n};\n\n/**\n * üá¨üáß Get a specific swim set by ID\n * üá´üá∑ R√©cup√©rer une s√©rie de natation sp√©cifique par son ID\n * \n * @param {number} id - The swim set ID\n * @returns {Promise} - API response\n */\nexport const getSwimSet = (id) => {\n  console.log(`R√©cup√©ration de la s√©rie de natation ${id}`);\n  return api.get(`/api/swim-sets/${id}`);\n};\n\n/**\n * üá¨üáß Create a new swim set\n * üá´üá∑ Cr√©er une nouvelle s√©rie de natation\n * \n * @param {Object} swimSetData - The swim set data\n * @returns {Promise} - API response\n */\nexport const createSwimSet = (swimSetData) => {\n  console.log('Cr√©ation d\\'une nouvelle s√©rie de natation', swimSetData);\n  return api.post('/api/swim-sets', swimSetData);\n};\n\n/**\n * üá¨üáß Update an existing swim set\n * üá´üá∑ Mettre √† jour une s√©rie de natation existante\n * \n * @param {number} id - The swim set ID\n * @param {Object} swimSetData - The updated swim set data\n * @returns {Promise} - API response\n */\nexport const updateSwimSet = (id, swimSetData) => {\n  console.log(`Mise √† jour de la s√©rie de natation ${id}`, swimSetData);\n  return api.post(`/api/swim-sets/${id}`, {\n    ...swimSetData,\n    _method: 'PATCH'  // Laravel form method spoofing\n  });\n};\n\n/**\n * üá¨üáß Delete a swim set\n * üá´üá∑ Supprimer une s√©rie de natation\n * \n * @param {number} id - The swim set ID\n * @returns {Promise} - API response\n */\nexport const deleteSwimSet = (id) => {\n  console.log(`Suppression de la s√©rie de natation ${id}`);\n  return api.delete(`/api/swim-sets/${id}`);\n};"],"mappings":"AAAA;AACA;;AAEA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/BC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC5D,OAAOH,GAAG,CAACI,GAAG,CAAC,gBAAgB,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIC,EAAE,IAAK;EAChCJ,OAAO,CAACC,GAAG,CAAC,wCAAwCG,EAAE,EAAE,CAAC;EACzD,OAAON,GAAG,CAACI,GAAG,CAAC,kBAAkBE,EAAE,EAAE,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAK;EAC5CN,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEK,WAAW,CAAC;EACtE,OAAOR,GAAG,CAACS,IAAI,CAAC,gBAAgB,EAAED,WAAW,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,aAAa,GAAGA,CAACJ,EAAE,EAAEE,WAAW,KAAK;EAChDN,OAAO,CAACC,GAAG,CAAC,uCAAuCG,EAAE,EAAE,EAAEE,WAAW,CAAC;EACrE,OAAOR,GAAG,CAACS,IAAI,CAAC,kBAAkBH,EAAE,EAAE,EAAE;IACtC,GAAGE,WAAW;IACdG,OAAO,EAAE,OAAO,CAAE;EACpB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAIN,EAAE,IAAK;EACnCJ,OAAO,CAACC,GAAG,CAAC,uCAAuCG,EAAE,EAAE,CAAC;EACxD,OAAON,GAAG,CAACa,MAAM,CAAC,kBAAkBP,EAAE,EAAE,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}