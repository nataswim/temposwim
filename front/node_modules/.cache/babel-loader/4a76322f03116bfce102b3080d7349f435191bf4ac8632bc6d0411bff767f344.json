{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/components/ui/Button.jsx\";\n// src/components/ui/Button.jsx\n// Bouton réutilisable avec des variantes de couleur et de taille\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Composant Bouton personnalisable pour l'application\n * @param {Object} props - Propriétés du composant\n * @param {string} [props.type='primary'] - Type de bouton (primary, secondary, success, danger, warning)\n * @param {string} [props.taille='md'] - Taille du bouton (sm, md, lg)\n * @param {boolean} [props.desactive=false] - État désactivé du bouton\n * @param {string} [props.className] - Classes CSS supplémentaires\n * @param {React.ReactNode} props.children - Contenu du bouton\n * @param {Function} [props.onClick] - Gestionnaire d'événement de clic\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  type = 'primary',\n  taille = 'md',\n  desactive = false,\n  className = '',\n  children,\n  onClick\n}) => {\n  // Définir les styles de base pour les types de boutons\n  const stylesType = {\n    primary: 'bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-300',\n    secondary: 'bg-gray-500 text-white hover:bg-gray-600 focus:ring-gray-300',\n    success: 'bg-green-500 text-white hover:bg-green-600 focus:ring-green-300',\n    danger: 'bg-red-500 text-white hover:bg-red-600 focus:ring-red-300',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-300'\n  };\n\n  // Définir les tailles de bouton\n  const stylesTaille = {\n    sm: 'px-2 py-1 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  };\n\n  // Valider le type et la taille\n  const typeValide = Object.keys(stylesType).includes(type) ? type : 'primary';\n  const tailleValide = Object.keys(stylesTaille).includes(taille) ? taille : 'md';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `\n        rounded-md \n        focus:outline-none focus:ring-2 focus:ring-opacity-50\n        transition-colors duration-200\n        disabled:opacity-50 disabled:cursor-not-allowed\n        ${stylesType[typeValide]}\n        ${stylesTaille[tailleValide]}\n        ${className}\n      `,\n    disabled: desactive,\n    onClick: onClick,\n    type: \"button\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// PropTypes pour la vérification des types\n_c = Button;\nButton.propTypes = {\n  type: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning']),\n  taille: PropTypes.oneOf(['sm', 'md', 'lg']),\n  desactive: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Button","type","taille","desactive","className","children","onClick","stylesType","primary","secondary","success","danger","warning","stylesTaille","sm","md","lg","typeValide","Object","keys","includes","tailleValide","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","oneOf","bool","string","node","isRequired","func","$RefreshReg$"],"sources":["/Users/mac/Downloads/APP_NS_V1/dev_projet/sauvegardegit/front/src/components/ui/Button.jsx"],"sourcesContent":["// src/components/ui/Button.jsx\n// Bouton réutilisable avec des variantes de couleur et de taille\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Composant Bouton personnalisable pour l'application\n * @param {Object} props - Propriétés du composant\n * @param {string} [props.type='primary'] - Type de bouton (primary, secondary, success, danger, warning)\n * @param {string} [props.taille='md'] - Taille du bouton (sm, md, lg)\n * @param {boolean} [props.desactive=false] - État désactivé du bouton\n * @param {string} [props.className] - Classes CSS supplémentaires\n * @param {React.ReactNode} props.children - Contenu du bouton\n * @param {Function} [props.onClick] - Gestionnaire d'événement de clic\n */\nconst Button = ({\n  type = 'primary',\n  taille = 'md',\n  desactive = false,\n  className = '',\n  children,\n  onClick\n}) => {\n  // Définir les styles de base pour les types de boutons\n  const stylesType = {\n    primary: 'bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-300',\n    secondary: 'bg-gray-500 text-white hover:bg-gray-600 focus:ring-gray-300',\n    success: 'bg-green-500 text-white hover:bg-green-600 focus:ring-green-300',\n    danger: 'bg-red-500 text-white hover:bg-red-600 focus:ring-red-300',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-300'\n  };\n\n  // Définir les tailles de bouton\n  const stylesTaille = {\n    sm: 'px-2 py-1 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  };\n\n  // Valider le type et la taille\n  const typeValide = Object.keys(stylesType).includes(type) ? type : 'primary';\n  const tailleValide = Object.keys(stylesTaille).includes(taille) ? taille : 'md';\n\n  return (\n    <button\n      className={`\n        rounded-md \n        focus:outline-none focus:ring-2 focus:ring-opacity-50\n        transition-colors duration-200\n        disabled:opacity-50 disabled:cursor-not-allowed\n        ${stylesType[typeValide]}\n        ${stylesTaille[tailleValide]}\n        ${className}\n      `}\n      disabled={desactive}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {children}\n    </button>\n  );\n};\n\n// PropTypes pour la vérification des types\nButton.propTypes = {\n  type: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning']),\n  taille: PropTypes.oneOf(['sm', 'md', 'lg']),\n  desactive: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Button;"],"mappings":";AAAA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,MAAM,GAAGA,CAAC;EACdC,IAAI,GAAG,SAAS;EAChBC,MAAM,GAAG,IAAI;EACbC,SAAS,GAAG,KAAK;EACjBC,SAAS,GAAG,EAAE;EACdC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,8DAA8D;IACvEC,SAAS,EAAE,8DAA8D;IACzEC,OAAO,EAAE,iEAAiE;IAC1EC,MAAM,EAAE,2DAA2D;IACnEC,OAAO,EAAE;EACX,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACnBC,EAAE,EAAE,mBAAmB;IACvBC,EAAE,EAAE,qBAAqB;IACzBC,EAAE,EAAE;EACN,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACZ,UAAU,CAAC,CAACa,QAAQ,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAG,SAAS;EAC5E,MAAMoB,YAAY,GAAGH,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,QAAQ,CAAClB,MAAM,CAAC,GAAGA,MAAM,GAAG,IAAI;EAE/E,oBACEH,OAAA;IACEK,SAAS,EAAE;AACjB;AACA;AACA;AACA;AACA,UAAUG,UAAU,CAACU,UAAU,CAAC;AAChC,UAAUJ,YAAY,CAACQ,YAAY,CAAC;AACpC,UAAUjB,SAAS;AACnB,OAAQ;IACFkB,QAAQ,EAAEnB,SAAU;IACpBG,OAAO,EAAEA,OAAQ;IACjBL,IAAI,EAAC,QAAQ;IAAAI,QAAA,EAEZA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;;AAED;AAAAC,EAAA,GAhDM3B,MAAM;AAiDZA,MAAM,CAAC4B,SAAS,GAAG;EACjB3B,IAAI,EAAEJ,SAAS,CAACgC,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EAC/E3B,MAAM,EAAEL,SAAS,CAACgC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3C1B,SAAS,EAAEN,SAAS,CAACiC,IAAI;EACzB1B,SAAS,EAAEP,SAAS,CAACkC,MAAM;EAC3B1B,QAAQ,EAAER,SAAS,CAACmC,IAAI,CAACC,UAAU;EACnC3B,OAAO,EAAET,SAAS,CAACqC;AACrB,CAAC;AAED,eAAelC,MAAM;AAAC,IAAA2B,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}