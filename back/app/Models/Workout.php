<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * ğŸ‡¬ğŸ‡§ Workout model representing a training session.
 * ğŸ‡«ğŸ‡· ModÃ¨le Workout reprÃ©sentant une sÃ©ance d'entraÃ®nement.
 */
class Workout extends Model
{
    use HasFactory;

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that are mass assignable.
     * ğŸ‡«ğŸ‡· Les attributs qui peuvent Ãªtre assignÃ©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'title', // ğŸ‡¬ğŸ‡§ Workout title / ğŸ‡«ğŸ‡· Titre de la sÃ©ance
        'description', // ğŸ‡¬ğŸ‡§ Workout description / ğŸ‡«ğŸ‡· Description de la sÃ©ance
        'workout_category', // ğŸ‡¬ğŸ‡§ Workout category / ğŸ‡«ğŸ‡· CatÃ©gorie de la sÃ©ance
        'user_id', // ğŸ‡¬ğŸ‡§ ID of the user who created the workout / ğŸ‡«ğŸ‡· ID de l'utilisateur ayant crÃ©Ã© la sÃ©ance
    ];

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that should be cast.
     * ğŸ‡«ğŸ‡· Les attributs qui doivent Ãªtre typÃ©s.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ Get the user that created the workout.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer l'utilisateur qui a crÃ©Ã© la sÃ©ance d'entraÃ®nement.
     */
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * ğŸ‡¬ğŸ‡§ The exercises that belong to the workout.
     * ğŸ‡«ğŸ‡· Les exercices associÃ©s Ã  cette sÃ©ance d'entraÃ®nement.
     */
    public function exercises()
    {
        return $this->belongsToMany(Exercise::class, 'workout_exercises');
    }

    /**
     * ğŸ‡¬ğŸ‡§ The plans that the workout is included in.
     * ğŸ‡«ğŸ‡· Les plans dans lesquels cette sÃ©ance d'entraÃ®nement est incluse.
     */
    public function plans()
    {
        return $this->belongsToMany(Plan::class, 'plan_workouts');
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the swim sets for the workout.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les sÃ©ries de natation associÃ©es Ã  cette sÃ©ance.
     */
    public function swimSets()
    {
        return $this->belongsToMany(SwimSet::class, 'workout_swim_sets');
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the mylist items associated with this workout.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les Ã©lÃ©ments de liste personnelle associÃ©s Ã  cette sÃ©ance.
     */
    public function mylistItems()
    {
        return $this->morphMany(MylistItem::class, 'item');
    }
}
