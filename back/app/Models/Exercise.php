<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * ğŸ‡¬ğŸ‡§ Exercise model representing a training exercise.
 * ğŸ‡«ğŸ‡· ModÃ¨le Exercise reprÃ©sentant un exercice d'entraÃ®nement.
 */
class Exercise extends Model
{
    use HasFactory;

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that are mass assignable.
     * ğŸ‡«ğŸ‡· Les attributs qui peuvent Ãªtre assignÃ©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'title',
        'description',
        'exercise_level',
        'exercise_category',
        'upload_id',
        'user_id',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that should be cast.
     * ğŸ‡«ğŸ‡· Les attributs qui doivent Ãªtre typÃ©s.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ Get the user that created the exercise.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer l'utilisateur qui a crÃ©Ã© l'exercice.
     */
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the upload associated with the exercise.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer le fichier associÃ© Ã  l'exercice.
     */
    public function upload()
    {
        return $this->belongsTo(Upload::class);
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the swim sets for the exercise.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les sÃ©ries de natation associÃ©es Ã  l'exercice.
     */
    public function swimSets()
    {
        return $this->hasMany(SwimSet::class);
    }

    /**
     * ğŸ‡¬ğŸ‡§ The workouts that belong to the exercise.
     * ğŸ‡«ğŸ‡· Les sÃ©ances d'entraÃ®nement associÃ©es Ã  l'exercice.
     */
    public function workouts()
    {
        return $this->belongsToMany(Workout::class, 'workout_exercises');
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the mylist items associated with this exercise.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les Ã©lÃ©ments de liste personnelle associÃ©s Ã  cet exercice.
     */
    public function mylistItems()
    {
        return $this->morphMany(MylistItem::class, 'item');
    }
}
