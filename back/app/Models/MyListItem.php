<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * ğŸ‡¬ğŸ‡§ MylistItem model representing an item in a personal list.
 * ğŸ‡«ğŸ‡· ModÃ¨le MylistItem reprÃ©sentant un Ã©lÃ©ment d'une liste personnelle.
 */
class MylistItem extends Model
{
    use HasFactory;

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that are mass assignable.
     * ğŸ‡«ğŸ‡· Les attributs qui peuvent Ãªtre assignÃ©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'mylist_id',
        'item_id',
        'item_type',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that should be cast.
     * ğŸ‡«ğŸ‡· Les attributs qui doivent Ãªtre typÃ©s.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'created_at' => 'datetime',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ Get the mylist that the item belongs to.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer la liste personnelle Ã  laquelle appartient l'Ã©lÃ©ment.
     */
    public function mylist()
    {
        return $this->belongsTo(Mylist::class);
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the item (exercise, workout, or plan).
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer l'Ã©lÃ©ment associÃ© (exercice, sÃ©ance d'entraÃ®nement ou plan).
     */
    public function item()
    {
        return $this->morphTo('item');
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the parent item model (Exercise, Workout, Plan)
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer le modÃ¨le parent de l'Ã©lÃ©ment (Exercise, Workout, Plan)
     */
    public function getItemDetails()
    {
        if (class_exists($this->item_type)) {
            return $this->item_type::find($this->item_id);
        }
        return null;
    }
}