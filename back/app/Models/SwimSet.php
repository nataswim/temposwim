<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * ğŸ‡¬ğŸ‡§ SwimSet model representing a set of swimming exercises.
 * ğŸ‡«ğŸ‡· ModÃ¨le SwimSet reprÃ©sentant une sÃ©rie d'exercices de natation.
 */
class SwimSet extends Model
{
    use HasFactory;

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that are mass assignable.
     * ğŸ‡«ğŸ‡· Les attributs qui peuvent Ãªtre assignÃ©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'workout_id',
        'exercise_id',
        'set_distance', // ğŸ‡¬ğŸ‡§ Distance of the set / ğŸ‡«ğŸ‡· Distance de la sÃ©rie
        'set_repetition', // ğŸ‡¬ğŸ‡§ Number of repetitions / ğŸ‡«ğŸ‡· Nombre de rÃ©pÃ©titions
        'rest_time', // ğŸ‡¬ğŸ‡§ Rest time between sets / ğŸ‡«ğŸ‡· Temps de repos entre les sÃ©ries
    ];

    /**
     * ğŸ‡¬ğŸ‡§ The attributes that should be cast.
     * ğŸ‡«ğŸ‡· Les attributs qui doivent Ãªtre typÃ©s.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * ğŸ‡¬ğŸ‡§ Get the workout that the swim set belongs to.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer la sÃ©ance d'entraÃ®nement Ã  laquelle appartient la sÃ©rie de natation.
     */
    public function workout()
    {
        return $this->belongsToMany(Workout::class, 'workout_swim_sets');
    }

    /**
     * ğŸ‡¬ğŸ‡§ Get the exercise that the swim set uses.
     * ğŸ‡«ğŸ‡· RÃ©cupÃ©rer l'exercice utilisÃ© dans cette sÃ©rie de natation.
     */
    public function exercise()
    {
        return $this->belongsTo(Exercise::class);
    }
}
