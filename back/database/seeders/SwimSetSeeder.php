<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\SwimSet;
use App\Models\Workout;
use App\Models\Exercise;

/**
 * ğŸ‡¬ğŸ‡§ SwimSetSeeder class for populating the "swim_sets" table.
 * ğŸ‡«ğŸ‡· Classe SwimSetSeeder pour le peuplement de la table "swim_sets".
 */
class SwimSetSeeder extends Seeder
{
    /**
     * ğŸ‡¬ğŸ‡§ Run the database seeds.
     * ğŸ‡«ğŸ‡· ExÃ©cuter le peuplement de la base de donnÃ©es.
     */
    public function run(): void
    {
        // ğŸ‡¬ğŸ‡§ Retrieve existing workouts and exercises.
        // ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les sÃ©ances d'entraÃ®nement et les exercices existants.
        $workouts = Workout::all();
        $exercises = Exercise::all();

        // ğŸ‡¬ğŸ‡§ If no workouts or exercises exist, display an informational message.
        // ğŸ‡«ğŸ‡· Si aucun workout ou exercice n'existe, afficher un message d'information.
        if ($workouts->isEmpty() || $exercises->isEmpty()) {
            $this->command->info('Aucun workout ou exercice trouvÃ©. Veuillez les seeder avant.');
            return;
        }

        // ğŸ‡¬ğŸ‡§ Create swim sets for each workout and exercise.
        // ğŸ‡«ğŸ‡· CrÃ©er des sÃ©ries de natation pour chaque sÃ©ance et exercice.
        foreach ($workouts as $workout) {
            foreach ($exercises as $exercise) {
                // ğŸ‡¬ğŸ‡§ First swim set with randomized distance, repetition, and rest time.
                // ğŸ‡«ğŸ‡· PremiÃ¨re sÃ©rie de natation avec distance, rÃ©pÃ©tition et temps de repos alÃ©atoires.
                SwimSet::create([
                    'workout_id' => $workout->id,
                    'exercise_id' => $exercise->id,
                    'set_distance' => rand(25, 200), // ğŸ‡¬ğŸ‡§ Distance of the swim set / ğŸ‡«ğŸ‡· Distance de la sÃ©rie
                    'set_repetition' => rand(1, 10), // ğŸ‡¬ğŸ‡§ Number of repetitions / ğŸ‡«ğŸ‡· Nombre de rÃ©pÃ©titions
                    'rest_time' => rand(15, 60), // ğŸ‡¬ğŸ‡§ Rest time in seconds / ğŸ‡«ğŸ‡· Temps de repos en secondes
                ]);

                // ğŸ‡¬ğŸ‡§ Second swim set with different randomized values.
                // ğŸ‡«ğŸ‡· DeuxiÃ¨me sÃ©rie de natation avec des valeurs diffÃ©rentes.
                SwimSet::create([
                    'workout_id' => $workout->id,
                    'exercise_id' => $exercise->id,
                    'set_distance' => rand(50, 400),
                    'set_repetition' => rand(1, 5),
                    'rest_time' => rand(30, 90),
                ]);
            }
        }
    }
}
