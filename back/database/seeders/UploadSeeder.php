<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\Upload;
use App\Models\User;

/**
 * ğŸ‡¬ğŸ‡§ UploadSeeder class for populating the "uploads" table.
 * ğŸ‡«ğŸ‡· Classe UploadSeeder pour le peuplement de la table "uploads".
 */
class UploadSeeder extends Seeder
{
    /**
     * ğŸ‡¬ğŸ‡§ Run the database seeds.
     * ğŸ‡«ğŸ‡· ExÃ©cuter le peuplement de la base de donnÃ©es.
     */
    public function run(): void
    {
        // ğŸ‡¬ğŸ‡§ Retrieve existing users.
        // ğŸ‡«ğŸ‡· RÃ©cupÃ©rer les utilisateurs existants.
        $users = User::all();

        // ğŸ‡¬ğŸ‡§ If no users exist, display an informational message.
        // ğŸ‡«ğŸ‡· Si aucun utilisateur n'existe, afficher un message d'information.
        if ($users->isEmpty()) {
            $this->command->info('Aucun utilisateur trouvÃ© dans la base de donnÃ©es.');
            return;
        }

        // ğŸ‡¬ğŸ‡§ Create file uploads for each user.
        // ğŸ‡«ğŸ‡· CrÃ©er des fichiers tÃ©lÃ©versÃ©s pour chaque utilisateur.
        foreach ($users as $user) {
            // ğŸ‡¬ğŸ‡§ First upload (image file).
            // ğŸ‡«ğŸ‡· Premier tÃ©lÃ©versement (fichier image).
            Upload::create([
                'filename' => 'example1.jpg', // ğŸ‡¬ğŸ‡§ File name / ğŸ‡«ğŸ‡· Nom du fichier
                'path' => 'uploads/example1.jpg', // ğŸ‡¬ğŸ‡§ File path / ğŸ‡«ğŸ‡· Chemin du fichier
                'type' => 'image', // ğŸ‡¬ğŸ‡§ File type / ğŸ‡«ğŸ‡· Type de fichier
                'user_id' => $user->id, // ğŸ‡¬ğŸ‡§ Associated user / ğŸ‡«ğŸ‡· Utilisateur associÃ©
            ]);

            // ğŸ‡¬ğŸ‡§ Second upload (PDF document).
            // ğŸ‡«ğŸ‡· DeuxiÃ¨me tÃ©lÃ©versement (document PDF).
            Upload::create([
                'filename' => 'example2.pdf',
                'path' => 'uploads/example2.pdf',
                'type' => 'document',
                'user_id' => $user->id,
            ]);
        }
    }
}
