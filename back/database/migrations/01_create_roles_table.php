<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

/**
 * ğŸ‡¬ğŸ‡§ Migration to create the "roles" table and add a foreign key in the "users" table.
 * ğŸ‡«ğŸ‡· Migration pour crÃ©er la table "roles" et ajouter une clÃ© Ã©trangÃ¨re dans la table "users".
 */
return new class extends Migration
{
    /**
     * ğŸ‡¬ğŸ‡§ Run the migrations.
     * ğŸ‡«ğŸ‡· ExÃ©cuter la migration.
     */
    public function up(): void
    {
        Schema::create('roles', function (Blueprint $table) {
            // ğŸ‡¬ğŸ‡§ Primary key (auto-increment).
            // ğŸ‡«ğŸ‡· ClÃ© primaire (auto-incrÃ©mentÃ©e).
            $table->bigIncrements('id');

            // ğŸ‡¬ğŸ‡§ Role name (unique).
            // ğŸ‡«ğŸ‡· Nom du rÃ´le (unique).
            $table->string('name')->unique();

            // ğŸ‡¬ğŸ‡§ Timestamps (created_at, updated_at).
            // ğŸ‡«ğŸ‡· Horodatage (created_at, updated_at).
            $table->timestamps();
        });

        // ğŸ‡¬ğŸ‡§ Add foreign key in "users" table referencing "roles".
        // ğŸ‡«ğŸ‡· Ajouter une clÃ© Ã©trangÃ¨re dans la table "users" vers "roles".
        Schema::table('users', function (Blueprint $table) {
            $table->foreignId('role_id')->nullable()->constrained('roles')->onDelete('set null');
        });
    }

    /**
     * ğŸ‡¬ğŸ‡§ Reverse the migrations.
     * ğŸ‡«ğŸ‡· Annuler la migration.
     */
    public function down(): void
    {
        // ğŸ‡¬ğŸ‡§ Drop foreign key constraint before dropping the "roles" table.
        // ğŸ‡«ğŸ‡· Supprimer la contrainte de clÃ© Ã©trangÃ¨re avant de supprimer la table "roles".
        Schema::table('users', function (Blueprint $table) {
            $table->dropForeign(['role_id']);
        });

        // ğŸ‡¬ğŸ‡§ Drop the "roles" table.
        // ğŸ‡«ğŸ‡· Supprimer la table "roles".
        Schema::dropIfExists('roles');
    }
};
